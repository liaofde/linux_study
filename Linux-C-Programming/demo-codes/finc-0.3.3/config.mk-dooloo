ifeq ($(OSTYPE),Linux)
CC  = gcc
AS  = gcc
LD  = ld
AR  = ar
RANLIB	= ranlib
else
CC  = i386-elf-gcc
AS  = i386-elf-gcc
LD  = i386-elf-ld
AR  = i386-elf-ar
RANLIB  = i386-elf-ranlib
endif
MKDIR	= mkdir
CP	= cp
RM	= rm -f
INCL   = $(DOOLU_PATH) -I$(DOOLU_PATH)/include
LIB_PATH    = $(DOOLU_PATH)/lib

ifeq ($(DJGPP),)
#for linux
AFLAGS =  -x assembler-with-cpp -D__LINUX__ -I$(INCL)
#CFLAGS = -Wall -O -finline-functions -fno-builtin -nostdinc -D__LINUX__ -I$(INCL)
#LFLAGS = -Bstatic -Ttext 0x100000 -s -nostartfiles -nostdlib -L$(LIB_PATH)

LFLAGS = -Bstatic -Ttext 0x100000 -nostartfiles -nostdlib -L$(LIB_PATH)
CFLAGS = -g -Wall -O -finline-functions -fno-builtin -nostdinc -D__LINUX__ -D__DOOLOO__ -I$(INCL)
else
#for djgpp
AFLAGS =  -x assembler-with-cpp -D__GNU__ -I$(INCL)
CFLAGS = -Wall -O -finline-functions -fno-builtin -nostdinc -D__GNU__ -D__DOOLOO__ -I$(INCL)
LFLAGS = -Bstatic -Ttext 0x100000 -oformat coff-go32 -s -nostartfiles -nostdlib -L$(LIB_PATH)

#CFLAGS = -g -Wall -O -finline-functions -fno-builtin -nostdinc -D__GNU__ -I$(INCL)
#LFLAGS = -Bstatic -Ttext 0x100000 -oformat coff-go32 -nostartfiles -nostdlib -L$(LIB_PATH)
endif

# Common rules
%.o : %.s
	$(REDIR) $(CC) $(AFLAGS) $(A_OUTPUT) -c $<
%.o : %.S
	$(REDIR) $(CC) $(AFLAGS) $(A_OUTPUT) -c $<
