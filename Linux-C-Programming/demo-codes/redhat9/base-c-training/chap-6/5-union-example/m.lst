
hello:     file format elf32-i386

Disassembly of section .text:

08048278 <_start>:
 8048278:	31 ed                	xor    %ebp,%ebp
 804827a:	5e                   	pop    %esi
 804827b:	89 e1                	mov    %esp,%ecx
 804827d:	83 e4 f0             	and    $0xfffffff0,%esp
 8048280:	50                   	push   %eax
 8048281:	54                   	push   %esp
 8048282:	52                   	push   %edx
 8048283:	68 a4 83 04 08       	push   $0x80483a4
 8048288:	68 74 83 04 08       	push   $0x8048374
 804828d:	51                   	push   %ecx
 804828e:	56                   	push   %esi
 804828f:	68 28 83 04 08       	push   $0x8048328
 8048294:	e8 bf ff ff ff       	call   8048258 <_init+0x28>
 8048299:	f4                   	hlt    
 804829a:	90                   	nop    
 804829b:	90                   	nop    

0804829c <call_gmon_start>:
 804829c:	55                   	push   %ebp
 804829d:	89 e5                	mov    %esp,%ebp
 804829f:	53                   	push   %ebx
 80482a0:	50                   	push   %eax
 80482a1:	e8 00 00 00 00       	call   80482a6 <call_gmon_start+0xa>
 80482a6:	5b                   	pop    %ebx
 80482a7:	81 c3 ba 12 00 00    	add    $0x12ba,%ebx
 80482ad:	8b 83 14 00 00 00    	mov    0x14(%ebx),%eax
 80482b3:	85 c0                	test   %eax,%eax
 80482b5:	74 02                	je     80482b9 <call_gmon_start+0x1d>
 80482b7:	ff d0                	call   *%eax
 80482b9:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 80482bc:	c9                   	leave  
 80482bd:	c3                   	ret    
 80482be:	90                   	nop    
 80482bf:	90                   	nop    

080482c0 <__do_global_dtors_aux>:
 80482c0:	55                   	push   %ebp
 80482c1:	89 e5                	mov    %esp,%ebp
 80482c3:	83 ec 08             	sub    $0x8,%esp
 80482c6:	80 3d 78 95 04 08 00 	cmpb   $0x0,0x8049578
 80482cd:	75 29                	jne    80482f8 <__do_global_dtors_aux+0x38>
 80482cf:	a1 6c 94 04 08       	mov    0x804946c,%eax
 80482d4:	8b 10                	mov    (%eax),%edx
 80482d6:	85 d2                	test   %edx,%edx
 80482d8:	74 17                	je     80482f1 <__do_global_dtors_aux+0x31>
 80482da:	89 f6                	mov    %esi,%esi
 80482dc:	83 c0 04             	add    $0x4,%eax
 80482df:	a3 6c 94 04 08       	mov    %eax,0x804946c
 80482e4:	ff d2                	call   *%edx
 80482e6:	a1 6c 94 04 08       	mov    0x804946c,%eax
 80482eb:	8b 10                	mov    (%eax),%edx
 80482ed:	85 d2                	test   %edx,%edx
 80482ef:	75 eb                	jne    80482dc <__do_global_dtors_aux+0x1c>
 80482f1:	c6 05 78 95 04 08 01 	movb   $0x1,0x8049578
 80482f8:	c9                   	leave  
 80482f9:	c3                   	ret    
 80482fa:	89 f6                	mov    %esi,%esi

080482fc <frame_dummy>:
 80482fc:	55                   	push   %ebp
 80482fd:	89 e5                	mov    %esp,%ebp
 80482ff:	83 ec 08             	sub    $0x8,%esp
 8048302:	a1 5c 95 04 08       	mov    0x804955c,%eax
 8048307:	85 c0                	test   %eax,%eax
 8048309:	74 19                	je     8048324 <frame_dummy+0x28>
 804830b:	b8 00 00 00 00       	mov    $0x0,%eax
 8048310:	85 c0                	test   %eax,%eax
 8048312:	74 10                	je     8048324 <frame_dummy+0x28>
 8048314:	83 ec 0c             	sub    $0xc,%esp
 8048317:	68 5c 95 04 08       	push   $0x804955c
 804831c:	e8 df 7c fb f7       	call   0 <_init-0x8048230>
 8048321:	83 c4 10             	add    $0x10,%esp
 8048324:	c9                   	leave  
 8048325:	c3                   	ret    
 8048326:	90                   	nop    
 8048327:	90                   	nop    

08048328 <main>:
struct hole a = { 'H', 1, 'o' };
struct no_hole b = { 9, 'N', 'O' };

int main( int argc, char * argv[] )
{
 8048328:	55                   	push   %ebp
 8048329:	89 e5                	mov    %esp,%ebp
 804832b:	83 ec 08             	sub    $0x8,%esp
 804832e:	83 e4 f0             	and    $0xfffffff0,%esp
 8048331:	b8 00 00 00 00       	mov    $0x0,%eax
 8048336:	29 c4                	sub    %eax,%esp
	printf( "hello, Cruel World! \n" );
 8048338:	83 ec 0c             	sub    $0xc,%esp
 804833b:	68 20 84 04 08       	push   $0x8048420
 8048340:	e8 23 ff ff ff       	call   8048268 <_init+0x38>
 8048345:	83 c4 10             	add    $0x10,%esp

	printf( "sizeof hole = %d \n", sizeof(a) );
 8048348:	83 ec 08             	sub    $0x8,%esp
 804834b:	6a 0c                	push   $0xc
 804834d:	68 36 84 04 08       	push   $0x8048436
 8048352:	e8 11 ff ff ff       	call   8048268 <_init+0x38>
 8048357:	83 c4 10             	add    $0x10,%esp
	printf( "sizeof no_hole = %d \n", sizeof(b) );
 804835a:	83 ec 08             	sub    $0x8,%esp
 804835d:	6a 08                	push   $0x8
 804835f:	68 49 84 04 08       	push   $0x8048449
 8048364:	e8 ff fe ff ff       	call   8048268 <_init+0x38>
 8048369:	83 c4 10             	add    $0x10,%esp

	return 0;
 804836c:	b8 00 00 00 00       	mov    $0x0,%eax
}
 8048371:	c9                   	leave  
 8048372:	c3                   	ret    
 8048373:	90                   	nop    

08048374 <__libc_csu_init>:
 8048374:	55                   	push   %ebp
 8048375:	89 e5                	mov    %esp,%ebp
 8048377:	56                   	push   %esi
 8048378:	53                   	push   %ebx
 8048379:	e8 b2 fe ff ff       	call   8048230 <_init>
 804837e:	b8 64 94 04 08       	mov    $0x8049464,%eax
 8048383:	2d 64 94 04 08       	sub    $0x8049464,%eax
 8048388:	c1 f8 02             	sar    $0x2,%eax
 804838b:	31 db                	xor    %ebx,%ebx
 804838d:	39 c3                	cmp    %eax,%ebx
 804838f:	73 0f                	jae    80483a0 <__libc_csu_init+0x2c>
 8048391:	89 c6                	mov    %eax,%esi
 8048393:	90                   	nop    
 8048394:	ff 14 9d 64 94 04 08 	call   *0x8049464(,%ebx,4)
 804839b:	43                   	inc    %ebx
 804839c:	39 f3                	cmp    %esi,%ebx
 804839e:	72 f4                	jb     8048394 <__libc_csu_init+0x20>
 80483a0:	5b                   	pop    %ebx
 80483a1:	5e                   	pop    %esi
 80483a2:	c9                   	leave  
 80483a3:	c3                   	ret    

080483a4 <__libc_csu_fini>:
 80483a4:	55                   	push   %ebp
 80483a5:	89 e5                	mov    %esp,%ebp
 80483a7:	53                   	push   %ebx
 80483a8:	50                   	push   %eax
 80483a9:	b8 64 94 04 08       	mov    $0x8049464,%eax
 80483ae:	2d 64 94 04 08       	sub    $0x8049464,%eax
 80483b3:	c1 f8 02             	sar    $0x2,%eax
 80483b6:	85 c0                	test   %eax,%eax
 80483b8:	8d 58 ff             	lea    0xffffffff(%eax),%ebx
 80483bb:	75 0b                	jne    80483c8 <__libc_csu_fini+0x24>
 80483bd:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 80483c0:	c9                   	leave  
 80483c1:	e9 36 00 00 00       	jmp    80483fc <_fini>
 80483c6:	89 f6                	mov    %esi,%esi
 80483c8:	ff 14 9d 64 94 04 08 	call   *0x8049464(,%ebx,4)
 80483cf:	89 da                	mov    %ebx,%edx
 80483d1:	4b                   	dec    %ebx
 80483d2:	85 d2                	test   %edx,%edx
 80483d4:	75 f2                	jne    80483c8 <__libc_csu_fini+0x24>
 80483d6:	eb e5                	jmp    80483bd <__libc_csu_fini+0x19>

080483d8 <__do_global_ctors_aux>:
 80483d8:	55                   	push   %ebp
 80483d9:	89 e5                	mov    %esp,%ebp
 80483db:	53                   	push   %ebx
 80483dc:	52                   	push   %edx
 80483dd:	a1 4c 95 04 08       	mov    0x804954c,%eax
 80483e2:	83 f8 ff             	cmp    $0xffffffff,%eax
 80483e5:	bb 4c 95 04 08       	mov    $0x804954c,%ebx
 80483ea:	74 0c                	je     80483f8 <__do_global_ctors_aux+0x20>
 80483ec:	83 eb 04             	sub    $0x4,%ebx
 80483ef:	ff d0                	call   *%eax
 80483f1:	8b 03                	mov    (%ebx),%eax
 80483f3:	83 f8 ff             	cmp    $0xffffffff,%eax
 80483f6:	75 f4                	jne    80483ec <__do_global_ctors_aux+0x14>
 80483f8:	58                   	pop    %eax
 80483f9:	5b                   	pop    %ebx
 80483fa:	c9                   	leave  
 80483fb:	c3                   	ret    

hello:     file format elf32-i386

Disassembly of section .rodata:

08048418 <_fp_hw>:
 8048418:	03 00 00 00                                         ....

0804841c <_IO_stdin_used>:
 804841c:	01 00 02 00 68 65 6c 6c 6f 2c 20 43 72 75 65 6c     ....hello, Cruel
 804842c:	20 57 6f 72 6c 64 21 20 0a 00 73 69 7a 65 6f 66      World! ..sizeof
 804843c:	20 68 6f 6c 65 20 3d 20 25 64 20 0a 00 73 69 7a      hole = %d ..siz
 804844c:	65 6f 66 20 6e 6f 5f 68 6f 6c 65 20 3d 20 25 64     eof no_hole = %d
 804845c:	20 0a 00                                             ..

hello:     file format elf32-i386

Disassembly of section .data:

08049464 <__data_start>:
 8049464:	00 00                	add    %al,(%eax)
	...

08049468 <__dso_handle>:
 8049468:	00 00 00 00                                         ....

0804946c <p.0>:
 804946c:	58 95 04 08                                         X...

08049470 <a>:
 8049470:	48 00 00 00 01 00 00 00 6f 00 00 00                 H.......o...

0804947c <b>:
 804947c:	09 00 00 00 4e 4f 00 00                             ....NO..

hello:     file format elf32-i386

