
hello:     file format elf32-i386

Disassembly of section .text:

08048278 <_start>:
 8048278:	31 ed                	xor    %ebp,%ebp
 804827a:	5e                   	pop    %esi
 804827b:	89 e1                	mov    %esp,%ecx
 804827d:	83 e4 f0             	and    $0xfffffff0,%esp
 8048280:	50                   	push   %eax
 8048281:	54                   	push   %esp
 8048282:	52                   	push   %edx
 8048283:	68 ac 84 04 08       	push   $0x80484ac
 8048288:	68 7c 84 04 08       	push   $0x804847c
 804828d:	51                   	push   %ecx
 804828e:	56                   	push   %esi
 804828f:	68 28 83 04 08       	push   $0x8048328
 8048294:	e8 bf ff ff ff       	call   8048258 <_init+0x28>
 8048299:	f4                   	hlt    
 804829a:	90                   	nop    
 804829b:	90                   	nop    

0804829c <call_gmon_start>:
 804829c:	55                   	push   %ebp
 804829d:	89 e5                	mov    %esp,%ebp
 804829f:	53                   	push   %ebx
 80482a0:	50                   	push   %eax
 80482a1:	e8 00 00 00 00       	call   80482a6 <call_gmon_start+0xa>
 80482a6:	5b                   	pop    %ebx
 80482a7:	81 c3 f2 14 00 00    	add    $0x14f2,%ebx
 80482ad:	8b 83 14 00 00 00    	mov    0x14(%ebx),%eax
 80482b3:	85 c0                	test   %eax,%eax
 80482b5:	74 02                	je     80482b9 <call_gmon_start+0x1d>
 80482b7:	ff d0                	call   *%eax
 80482b9:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 80482bc:	c9                   	leave  
 80482bd:	c3                   	ret    
 80482be:	90                   	nop    
 80482bf:	90                   	nop    

080482c0 <__do_global_dtors_aux>:
 80482c0:	55                   	push   %ebp
 80482c1:	89 e5                	mov    %esp,%ebp
 80482c3:	83 ec 08             	sub    $0x8,%esp
 80482c6:	80 3d b0 97 04 08 00 	cmpb   $0x0,0x80497b0
 80482cd:	75 29                	jne    80482f8 <__do_global_dtors_aux+0x38>
 80482cf:	a1 48 96 04 08       	mov    0x8049648,%eax
 80482d4:	8b 10                	mov    (%eax),%edx
 80482d6:	85 d2                	test   %edx,%edx
 80482d8:	74 17                	je     80482f1 <__do_global_dtors_aux+0x31>
 80482da:	89 f6                	mov    %esi,%esi
 80482dc:	83 c0 04             	add    $0x4,%eax
 80482df:	a3 48 96 04 08       	mov    %eax,0x8049648
 80482e4:	ff d2                	call   *%edx
 80482e6:	a1 48 96 04 08       	mov    0x8049648,%eax
 80482eb:	8b 10                	mov    (%eax),%edx
 80482ed:	85 d2                	test   %edx,%edx
 80482ef:	75 eb                	jne    80482dc <__do_global_dtors_aux+0x1c>
 80482f1:	c6 05 b0 97 04 08 01 	movb   $0x1,0x80497b0
 80482f8:	c9                   	leave  
 80482f9:	c3                   	ret    
 80482fa:	89 f6                	mov    %esi,%esi

080482fc <frame_dummy>:
 80482fc:	55                   	push   %ebp
 80482fd:	89 e5                	mov    %esp,%ebp
 80482ff:	83 ec 08             	sub    $0x8,%esp
 8048302:	a1 94 97 04 08       	mov    0x8049794,%eax
 8048307:	85 c0                	test   %eax,%eax
 8048309:	74 19                	je     8048324 <frame_dummy+0x28>
 804830b:	b8 00 00 00 00       	mov    $0x0,%eax
 8048310:	85 c0                	test   %eax,%eax
 8048312:	74 10                	je     8048324 <frame_dummy+0x28>
 8048314:	83 ec 0c             	sub    $0xc,%esp
 8048317:	68 94 97 04 08       	push   $0x8049794
 804831c:	e8 df 7c fb f7       	call   0 <_init-0x8048230>
 8048321:	83 c4 10             	add    $0x10,%esp
 8048324:	c9                   	leave  
 8048325:	c3                   	ret    
 8048326:	90                   	nop    
 8048327:	90                   	nop    

08048328 <main>:
char * name[] = { "Illegal month", "Jan", "Feb", "Mar" };
char name2[][15] = { "123", "456", "789", "000" };

int main( int argc, char * argv[] )
{
 8048328:	55                   	push   %ebp
 8048329:	89 e5                	mov    %esp,%ebp
 804832b:	83 ec 08             	sub    $0x8,%esp
 804832e:	83 e4 f0             	and    $0xfffffff0,%esp
 8048331:	b8 00 00 00 00       	mov    $0x0,%eax
 8048336:	29 c4                	sub    %eax,%esp
	char temp;

	printf( "hello, Cruel World! \n" );
 8048338:	83 ec 0c             	sub    $0xc,%esp
 804833b:	68 42 85 04 08       	push   $0x8048542
 8048340:	e8 23 ff ff ff       	call   8048268 <_init+0x38>
 8048345:	83 c4 10             	add    $0x10,%esp

//	name++;
//	name2++;


	//printf( "name = %s \n", name );
	printf( "name = 0x%x \n", name );
 8048348:	83 ec 08             	sub    $0x8,%esp
 804834b:	68 60 96 04 08       	push   $0x8049660
 8048350:	68 58 85 04 08       	push   $0x8048558
 8048355:	e8 0e ff ff ff       	call   8048268 <_init+0x38>
 804835a:	83 c4 10             	add    $0x10,%esp
	printf( "-->> name[0] = 0x%x \n", name[0] );
 804835d:	83 ec 08             	sub    $0x8,%esp
 8048360:	ff 35 60 96 04 08    	pushl  0x8049660
 8048366:	68 66 85 04 08       	push   $0x8048566
 804836b:	e8 f8 fe ff ff       	call   8048268 <_init+0x38>
 8048370:	83 c4 10             	add    $0x10,%esp
	printf( "-->> &name[0] = 0x%x \n", &name[0] );
 8048373:	83 ec 08             	sub    $0x8,%esp
 8048376:	68 60 96 04 08       	push   $0x8049660
 804837b:	68 7c 85 04 08       	push   $0x804857c
 8048380:	e8 e3 fe ff ff       	call   8048268 <_init+0x38>
 8048385:	83 c4 10             	add    $0x10,%esp
	printf( "name[0] = %s \n", name[0] );
 8048388:	83 ec 08             	sub    $0x8,%esp
 804838b:	ff 35 60 96 04 08    	pushl  0x8049660
 8048391:	68 93 85 04 08       	push   $0x8048593
 8048396:	e8 cd fe ff ff       	call   8048268 <_init+0x38>
 804839b:	83 c4 10             	add    $0x10,%esp
	printf( "name[1] = %s \n", name[1] );
 804839e:	83 ec 08             	sub    $0x8,%esp
 80483a1:	ff 35 64 96 04 08    	pushl  0x8049664
 80483a7:	68 a2 85 04 08       	push   $0x80485a2
 80483ac:	e8 b7 fe ff ff       	call   8048268 <_init+0x38>
 80483b1:	83 c4 10             	add    $0x10,%esp
	printf( "name[2] = %s \n", name[2] );
 80483b4:	83 ec 08             	sub    $0x8,%esp
 80483b7:	ff 35 68 96 04 08    	pushl  0x8049668
 80483bd:	68 b1 85 04 08       	push   $0x80485b1
 80483c2:	e8 a1 fe ff ff       	call   8048268 <_init+0x38>
 80483c7:	83 c4 10             	add    $0x10,%esp
	printf( "name[3] = %s \n", name[3] );
 80483ca:	83 ec 08             	sub    $0x8,%esp
 80483cd:	ff 35 6c 96 04 08    	pushl  0x804966c
 80483d3:	68 c0 85 04 08       	push   $0x80485c0
 80483d8:	e8 8b fe ff ff       	call   8048268 <_init+0x38>
 80483dd:	83 c4 10             	add    $0x10,%esp

	printf( "name2 = 0x%x \n", name2 );
 80483e0:	83 ec 08             	sub    $0x8,%esp
 80483e3:	68 80 96 04 08       	push   $0x8049680
 80483e8:	68 cf 85 04 08       	push   $0x80485cf
 80483ed:	e8 76 fe ff ff       	call   8048268 <_init+0x38>
 80483f2:	83 c4 10             	add    $0x10,%esp
	printf( "name2[1] = 0x%x \n", name2[1] );
 80483f5:	83 ec 08             	sub    $0x8,%esp
 80483f8:	68 8f 96 04 08       	push   $0x804968f
 80483fd:	68 de 85 04 08       	push   $0x80485de
 8048402:	e8 61 fe ff ff       	call   8048268 <_init+0x38>
 8048407:	83 c4 10             	add    $0x10,%esp
//	return 0;

	//name2[0] = name[0];

	//name2[0][0] = name[0];

/*
	printf( "1 name2[0] = %s \n", name2[0] );


	temp = name2[0][0];
	printf( "name2[0][0] = 0x%x %d \n", temp, temp );


	printf( "name[0] = %s \n", name[0] );
	printf( "name[0] = 0x%x \n", name[0] );
	printf( "2 name2[0] = %s \n", name2[0] );
*/

	printf( "name2 = 0x%x \n", name2 );
 804840a:	83 ec 08             	sub    $0x8,%esp
 804840d:	68 80 96 04 08       	push   $0x8049680
 8048412:	68 cf 85 04 08       	push   $0x80485cf
 8048417:	e8 4c fe ff ff       	call   8048268 <_init+0x38>
 804841c:	83 c4 10             	add    $0x10,%esp
	printf( "name2[0] = %s \n", name2[0] );
 804841f:	83 ec 08             	sub    $0x8,%esp
 8048422:	68 80 96 04 08       	push   $0x8049680
 8048427:	68 f0 85 04 08       	push   $0x80485f0
 804842c:	e8 37 fe ff ff       	call   8048268 <_init+0x38>
 8048431:	83 c4 10             	add    $0x10,%esp
	printf( "name2[1] = %s \n", name2[1] );
 8048434:	83 ec 08             	sub    $0x8,%esp
 8048437:	68 8f 96 04 08       	push   $0x804968f
 804843c:	68 00 86 04 08       	push   $0x8048600
 8048441:	e8 22 fe ff ff       	call   8048268 <_init+0x38>
 8048446:	83 c4 10             	add    $0x10,%esp
	printf( "name2[2] = %s \n", name2[2] );
 8048449:	83 ec 08             	sub    $0x8,%esp
 804844c:	68 9e 96 04 08       	push   $0x804969e
 8048451:	68 10 86 04 08       	push   $0x8048610
 8048456:	e8 0d fe ff ff       	call   8048268 <_init+0x38>
 804845b:	83 c4 10             	add    $0x10,%esp
	printf( "name2[3] = %s \n", name2[3] );
 804845e:	83 ec 08             	sub    $0x8,%esp
 8048461:	68 ad 96 04 08       	push   $0x80496ad
 8048466:	68 20 86 04 08       	push   $0x8048620
 804846b:	e8 f8 fd ff ff       	call   8048268 <_init+0x38>
 8048470:	83 c4 10             	add    $0x10,%esp
	return 0;
 8048473:	b8 00 00 00 00       	mov    $0x0,%eax
}
 8048478:	c9                   	leave  
 8048479:	c3                   	ret    
 804847a:	90                   	nop    
 804847b:	90                   	nop    

0804847c <__libc_csu_init>:
 804847c:	55                   	push   %ebp
 804847d:	89 e5                	mov    %esp,%ebp
 804847f:	56                   	push   %esi
 8048480:	53                   	push   %ebx
 8048481:	e8 aa fd ff ff       	call   8048230 <_init>
 8048486:	b8 34 96 04 08       	mov    $0x8049634,%eax
 804848b:	2d 34 96 04 08       	sub    $0x8049634,%eax
 8048490:	c1 f8 02             	sar    $0x2,%eax
 8048493:	31 db                	xor    %ebx,%ebx
 8048495:	39 c3                	cmp    %eax,%ebx
 8048497:	73 0f                	jae    80484a8 <__libc_csu_init+0x2c>
 8048499:	89 c6                	mov    %eax,%esi
 804849b:	90                   	nop    
 804849c:	ff 14 9d 34 96 04 08 	call   *0x8049634(,%ebx,4)
 80484a3:	43                   	inc    %ebx
 80484a4:	39 f3                	cmp    %esi,%ebx
 80484a6:	72 f4                	jb     804849c <__libc_csu_init+0x20>
 80484a8:	5b                   	pop    %ebx
 80484a9:	5e                   	pop    %esi
 80484aa:	c9                   	leave  
 80484ab:	c3                   	ret    

080484ac <__libc_csu_fini>:
 80484ac:	55                   	push   %ebp
 80484ad:	89 e5                	mov    %esp,%ebp
 80484af:	53                   	push   %ebx
 80484b0:	50                   	push   %eax
 80484b1:	b8 34 96 04 08       	mov    $0x8049634,%eax
 80484b6:	2d 34 96 04 08       	sub    $0x8049634,%eax
 80484bb:	c1 f8 02             	sar    $0x2,%eax
 80484be:	85 c0                	test   %eax,%eax
 80484c0:	8d 58 ff             	lea    0xffffffff(%eax),%ebx
 80484c3:	75 0b                	jne    80484d0 <__libc_csu_fini+0x24>
 80484c5:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 80484c8:	c9                   	leave  
 80484c9:	e9 36 00 00 00       	jmp    8048504 <_fini>
 80484ce:	89 f6                	mov    %esi,%esi
 80484d0:	ff 14 9d 34 96 04 08 	call   *0x8049634(,%ebx,4)
 80484d7:	89 da                	mov    %ebx,%edx
 80484d9:	4b                   	dec    %ebx
 80484da:	85 d2                	test   %edx,%edx
 80484dc:	75 f2                	jne    80484d0 <__libc_csu_fini+0x24>
 80484de:	eb e5                	jmp    80484c5 <__libc_csu_fini+0x19>

080484e0 <__do_global_ctors_aux>:
 80484e0:	55                   	push   %ebp
 80484e1:	89 e5                	mov    %esp,%ebp
 80484e3:	53                   	push   %ebx
 80484e4:	52                   	push   %edx
 80484e5:	a1 84 97 04 08       	mov    0x8049784,%eax
 80484ea:	83 f8 ff             	cmp    $0xffffffff,%eax
 80484ed:	bb 84 97 04 08       	mov    $0x8049784,%ebx
 80484f2:	74 0c                	je     8048500 <__do_global_ctors_aux+0x20>
 80484f4:	83 eb 04             	sub    $0x4,%ebx
 80484f7:	ff d0                	call   *%eax
 80484f9:	8b 03                	mov    (%ebx),%eax
 80484fb:	83 f8 ff             	cmp    $0xffffffff,%eax
 80484fe:	75 f4                	jne    80484f4 <__do_global_ctors_aux+0x14>
 8048500:	58                   	pop    %eax
 8048501:	5b                   	pop    %ebx
 8048502:	c9                   	leave  
 8048503:	c3                   	ret    

hello:     file format elf32-i386

Disassembly of section .rodata:

08048520 <_fp_hw>:
 8048520:	03 00 00 00                                         ....

08048524 <_IO_stdin_used>:
 8048524:	01 00 02 00 49 6c 6c 65 67 61 6c 20 6d 6f 6e 74     ....Illegal mont
 8048534:	68 00 4a 61 6e 00 46 65 62 00 4d 61 72 00 68 65     h.Jan.Feb.Mar.he
 8048544:	6c 6c 6f 2c 20 43 72 75 65 6c 20 57 6f 72 6c 64     llo, Cruel World
 8048554:	21 20 0a 00 6e 61 6d 65 20 3d 20 30 78 25 78 20     ! ..name = 0x%x 
 8048564:	0a 00 2d 2d 3e 3e 20 6e 61 6d 65 5b 30 5d 20 3d     ..-->> name[0] =
 8048574:	20 30 78 25 78 20 0a 00 2d 2d 3e 3e 20 26 6e 61      0x%x ..-->> &na
 8048584:	6d 65 5b 30 5d 20 3d 20 30 78 25 78 20 0a 00 6e     me[0] = 0x%x ..n
 8048594:	61 6d 65 5b 30 5d 20 3d 20 25 73 20 0a 00 6e 61     ame[0] = %s ..na
 80485a4:	6d 65 5b 31 5d 20 3d 20 25 73 20 0a 00 6e 61 6d     me[1] = %s ..nam
 80485b4:	65 5b 32 5d 20 3d 20 25 73 20 0a 00 6e 61 6d 65     e[2] = %s ..name
 80485c4:	5b 33 5d 20 3d 20 25 73 20 0a 00 6e 61 6d 65 32     [3] = %s ..name2
 80485d4:	20 3d 20 30 78 25 78 20 0a 00 6e 61 6d 65 32 5b      = 0x%x ..name2[
 80485e4:	31 5d 20 3d 20 30 78 25 78 20 0a 00 6e 61 6d 65     1] = 0x%x ..name
 80485f4:	32 5b 30 5d 20 3d 20 25 73 20 0a 00 6e 61 6d 65     2[0] = %s ..name
 8048604:	32 5b 31 5d 20 3d 20 25 73 20 0a 00 6e 61 6d 65     2[1] = %s ..name
 8048614:	32 5b 32 5d 20 3d 20 25 73 20 0a 00 6e 61 6d 65     2[2] = %s ..name
 8048624:	32 5b 33 5d 20 3d 20 25 73 20 0a 00                 2[3] = %s ..

hello:     file format elf32-i386

Disassembly of section .data:

08049640 <__data_start>:
 8049640:	00 00                	add    %al,(%eax)
	...

08049644 <__dso_handle>:
 8049644:	00 00 00 00                                         ....

08049648 <p.0>:
 8049648:	90 97 04 08 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

08049660 <name>:
 8049660:	28 85 04 08 36 85 04 08 3a 85 04 08 3e 85 04 08     (...6...:...>...
	...

08049680 <name2>:
 8049680:	31 32 33 00 00 00 00 00 00 00 00 00 00 00 00 34     123............4
 8049690:	35 36 00 00 00 00 00 00 00 00 00 00 00 00 37 38     56............78
 80496a0:	39 00 00 00 00 00 00 00 00 00 00 00 00 30 30 30     9............000
	...
