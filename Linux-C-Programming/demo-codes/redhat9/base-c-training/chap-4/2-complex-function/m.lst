
main.elf:     file format elf32-i386

Disassembly of section .text:

08048278 <_start>:
 8048278:	31 ed                	xor    %ebp,%ebp
 804827a:	5e                   	pop    %esi
 804827b:	89 e1                	mov    %esp,%ecx
 804827d:	83 e4 f0             	and    $0xfffffff0,%esp
 8048280:	50                   	push   %eax
 8048281:	54                   	push   %esp
 8048282:	52                   	push   %edx
 8048283:	68 04 84 04 08       	push   $0x8048404
 8048288:	68 d4 83 04 08       	push   $0x80483d4
 804828d:	51                   	push   %ecx
 804828e:	56                   	push   %esi
 804828f:	68 28 83 04 08       	push   $0x8048328
 8048294:	e8 bf ff ff ff       	call   8048258 <_init+0x28>
 8048299:	f4                   	hlt    
 804829a:	90                   	nop    
 804829b:	90                   	nop    

0804829c <call_gmon_start>:
 804829c:	55                   	push   %ebp
 804829d:	89 e5                	mov    %esp,%ebp
 804829f:	53                   	push   %ebx
 80482a0:	50                   	push   %eax
 80482a1:	e8 00 00 00 00       	call   80482a6 <call_gmon_start+0xa>
 80482a6:	5b                   	pop    %ebx
 80482a7:	81 c3 06 13 00 00    	add    $0x1306,%ebx
 80482ad:	8b 83 14 00 00 00    	mov    0x14(%ebx),%eax
 80482b3:	85 c0                	test   %eax,%eax
 80482b5:	74 02                	je     80482b9 <call_gmon_start+0x1d>
 80482b7:	ff d0                	call   *%eax
 80482b9:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 80482bc:	c9                   	leave  
 80482bd:	c3                   	ret    
 80482be:	90                   	nop    
 80482bf:	90                   	nop    

080482c0 <__do_global_dtors_aux>:
 80482c0:	55                   	push   %ebp
 80482c1:	89 e5                	mov    %esp,%ebp
 80482c3:	83 ec 08             	sub    $0x8,%esp
 80482c6:	80 3d c4 95 04 08 00 	cmpb   $0x0,0x80495c4
 80482cd:	75 29                	jne    80482f8 <__do_global_dtors_aux+0x38>
 80482cf:	a1 c4 94 04 08       	mov    0x80494c4,%eax
 80482d4:	8b 10                	mov    (%eax),%edx
 80482d6:	85 d2                	test   %edx,%edx
 80482d8:	74 17                	je     80482f1 <__do_global_dtors_aux+0x31>
 80482da:	89 f6                	mov    %esi,%esi
 80482dc:	83 c0 04             	add    $0x4,%eax
 80482df:	a3 c4 94 04 08       	mov    %eax,0x80494c4
 80482e4:	ff d2                	call   *%edx
 80482e6:	a1 c4 94 04 08       	mov    0x80494c4,%eax
 80482eb:	8b 10                	mov    (%eax),%edx
 80482ed:	85 d2                	test   %edx,%edx
 80482ef:	75 eb                	jne    80482dc <__do_global_dtors_aux+0x1c>
 80482f1:	c6 05 c4 95 04 08 01 	movb   $0x1,0x80495c4
 80482f8:	c9                   	leave  
 80482f9:	c3                   	ret    
 80482fa:	89 f6                	mov    %esi,%esi

080482fc <frame_dummy>:
 80482fc:	55                   	push   %ebp
 80482fd:	89 e5                	mov    %esp,%ebp
 80482ff:	83 ec 08             	sub    $0x8,%esp
 8048302:	a1 a8 95 04 08       	mov    0x80495a8,%eax
 8048307:	85 c0                	test   %eax,%eax
 8048309:	74 19                	je     8048324 <frame_dummy+0x28>
 804830b:	b8 00 00 00 00       	mov    $0x0,%eax
 8048310:	85 c0                	test   %eax,%eax
 8048312:	74 10                	je     8048324 <frame_dummy+0x28>
 8048314:	83 ec 0c             	sub    $0xc,%esp
 8048317:	68 a8 95 04 08       	push   $0x80495a8
 804831c:	e8 df 7c fb f7       	call   0 <_init-0x8048230>
 8048321:	83 c4 10             	add    $0x10,%esp
 8048324:	c9                   	leave  
 8048325:	c3                   	ret    
 8048326:	90                   	nop    
 8048327:	90                   	nop    

08048328 <main>:
 8048328:	55                   	push   %ebp
 8048329:	89 e5                	mov    %esp,%ebp
 804832b:	83 ec 08             	sub    $0x8,%esp
 804832e:	83 e4 f0             	and    $0xfffffff0,%esp
 8048331:	b8 00 00 00 00       	mov    $0x0,%eax
 8048336:	29 c4                	sub    %eax,%esp
 8048338:	83 ec 0c             	sub    $0xc,%esp
 804833b:	68 80 84 04 08       	push   $0x8048480
 8048340:	e8 23 ff ff ff       	call   8048268 <_init+0x38>
 8048345:	83 c4 10             	add    $0x10,%esp
 8048348:	83 ec 08             	sub    $0x8,%esp
 804834b:	68 c8 00 00 00       	push   $0xc8
 8048350:	6a 64                	push   $0x64
 8048352:	e8 49 00 00 00       	call   80483a0 <add>
 8048357:	83 c4 10             	add    $0x10,%esp
 804835a:	89 45 fc             	mov    %eax,0xfffffffc(%ebp)
 804835d:	83 ec 08             	sub    $0x8,%esp
 8048360:	ff 75 fc             	pushl  0xfffffffc(%ebp)
 8048363:	68 96 84 04 08       	push   $0x8048496
 8048368:	e8 fb fe ff ff       	call   8048268 <_init+0x38>
 804836d:	83 c4 10             	add    $0x10,%esp
 8048370:	83 ec 08             	sub    $0x8,%esp
 8048373:	68 c8 00 00 00       	push   $0xc8
 8048378:	6a 64                	push   $0x64
 804837a:	e8 45 00 00 00       	call   80483c4 <sub>
 804837f:	83 c4 10             	add    $0x10,%esp
 8048382:	89 45 fc             	mov    %eax,0xfffffffc(%ebp)
 8048385:	83 ec 08             	sub    $0x8,%esp
 8048388:	ff 75 fc             	pushl  0xfffffffc(%ebp)
 804838b:	68 a1 84 04 08       	push   $0x80484a1
 8048390:	e8 d3 fe ff ff       	call   8048268 <_init+0x38>
 8048395:	83 c4 10             	add    $0x10,%esp
 8048398:	b8 00 00 00 00       	mov    $0x0,%eax
 804839d:	c9                   	leave  
 804839e:	c3                   	ret    
 804839f:	90                   	nop    

080483a0 <add>:
 80483a0:	55                   	push   %ebp
 80483a1:	89 e5                	mov    %esp,%ebp
 80483a3:	83 ec 08             	sub    $0x8,%esp
 80483a6:	83 ec 08             	sub    $0x8,%esp
 80483a9:	ff 35 cc 94 04 08    	pushl  0x80494cc
 80483af:	68 ac 84 04 08       	push   $0x80484ac
 80483b4:	e8 af fe ff ff       	call   8048268 <_init+0x38>
 80483b9:	83 c4 10             	add    $0x10,%esp
 80483bc:	8b 45 0c             	mov    0xc(%ebp),%eax
 80483bf:	03 45 08             	add    0x8(%ebp),%eax
 80483c2:	c9                   	leave  
 80483c3:	c3                   	ret    

080483c4 <sub>:
 80483c4:	55                   	push   %ebp
 80483c5:	89 e5                	mov    %esp,%ebp
 80483c7:	8b 55 0c             	mov    0xc(%ebp),%edx
 80483ca:	8b 45 08             	mov    0x8(%ebp),%eax
 80483cd:	29 d0                	sub    %edx,%eax
 80483cf:	c9                   	leave  
 80483d0:	c3                   	ret    
 80483d1:	90                   	nop    
 80483d2:	90                   	nop    
 80483d3:	90                   	nop    

080483d4 <__libc_csu_init>:
 80483d4:	55                   	push   %ebp
 80483d5:	89 e5                	mov    %esp,%ebp
 80483d7:	56                   	push   %esi
 80483d8:	53                   	push   %ebx
 80483d9:	e8 52 fe ff ff       	call   8048230 <_init>
 80483de:	b8 bc 94 04 08       	mov    $0x80494bc,%eax
 80483e3:	2d bc 94 04 08       	sub    $0x80494bc,%eax
 80483e8:	c1 f8 02             	sar    $0x2,%eax
 80483eb:	31 db                	xor    %ebx,%ebx
 80483ed:	39 c3                	cmp    %eax,%ebx
 80483ef:	73 0f                	jae    8048400 <__libc_csu_init+0x2c>
 80483f1:	89 c6                	mov    %eax,%esi
 80483f3:	90                   	nop    
 80483f4:	ff 14 9d bc 94 04 08 	call   *0x80494bc(,%ebx,4)
 80483fb:	43                   	inc    %ebx
 80483fc:	39 f3                	cmp    %esi,%ebx
 80483fe:	72 f4                	jb     80483f4 <__libc_csu_init+0x20>
 8048400:	5b                   	pop    %ebx
 8048401:	5e                   	pop    %esi
 8048402:	c9                   	leave  
 8048403:	c3                   	ret    

08048404 <__libc_csu_fini>:
 8048404:	55                   	push   %ebp
 8048405:	89 e5                	mov    %esp,%ebp
 8048407:	53                   	push   %ebx
 8048408:	50                   	push   %eax
 8048409:	b8 bc 94 04 08       	mov    $0x80494bc,%eax
 804840e:	2d bc 94 04 08       	sub    $0x80494bc,%eax
 8048413:	c1 f8 02             	sar    $0x2,%eax
 8048416:	85 c0                	test   %eax,%eax
 8048418:	8d 58 ff             	lea    0xffffffff(%eax),%ebx
 804841b:	75 0b                	jne    8048428 <__libc_csu_fini+0x24>
 804841d:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 8048420:	c9                   	leave  
 8048421:	e9 36 00 00 00       	jmp    804845c <_fini>
 8048426:	89 f6                	mov    %esi,%esi
 8048428:	ff 14 9d bc 94 04 08 	call   *0x80494bc(,%ebx,4)
 804842f:	89 da                	mov    %ebx,%edx
 8048431:	4b                   	dec    %ebx
 8048432:	85 d2                	test   %edx,%edx
 8048434:	75 f2                	jne    8048428 <__libc_csu_fini+0x24>
 8048436:	eb e5                	jmp    804841d <__libc_csu_fini+0x19>

08048438 <__do_global_ctors_aux>:
 8048438:	55                   	push   %ebp
 8048439:	89 e5                	mov    %esp,%ebp
 804843b:	53                   	push   %ebx
 804843c:	52                   	push   %edx
 804843d:	a1 98 95 04 08       	mov    0x8049598,%eax
 8048442:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048445:	bb 98 95 04 08       	mov    $0x8049598,%ebx
 804844a:	74 0c                	je     8048458 <__do_global_ctors_aux+0x20>
 804844c:	83 eb 04             	sub    $0x4,%ebx
 804844f:	ff d0                	call   *%eax
 8048451:	8b 03                	mov    (%ebx),%eax
 8048453:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048456:	75 f4                	jne    804844c <__do_global_ctors_aux+0x14>
 8048458:	58                   	pop    %eax
 8048459:	5b                   	pop    %ebx
 804845a:	c9                   	leave  
 804845b:	c3                   	ret    

main.elf:     file format elf32-i386

Disassembly of section .rodata:

08048478 <_fp_hw>:
 8048478:	03 00 00 00                                         ....

0804847c <_IO_stdin_used>:
 804847c:	01 00 02 00 68 65 6c 6c 6f 2c 20 43 72 75 65 6c     ....hello, Cruel
 804848c:	20 57 6f 72 6c 64 21 20 0a 00 61 64 64 20 3d 20      World! ..add = 
 804849c:	25 64 20 0a 00 73 75 62 20 3d 20 25 64 20 0a 00     %d ..sub = %d ..
 80484ac:	67 20 3d 20 25 64 20 0a 00                          g = %d ..

main.elf:     file format elf32-i386

Disassembly of section .data:

080494bc <__data_start>:
 80494bc:	00 00                	add    %al,(%eax)
	...

080494c0 <__dso_handle>:
 80494c0:	00 00 00 00                                         ....

080494c4 <p.0>:
 80494c4:	a4 95 04 08                                         ....

080494c8 <data>:
 80494c8:	64 00 00 00                                         d...

080494cc <g>:
 80494cc:	12 00 00 00                                         ....
