
main.elf:     file format elf32-i386

Disassembly of section .text:

08048278 <_start>:
 8048278:	31 ed                	xor    %ebp,%ebp
 804827a:	5e                   	pop    %esi
 804827b:	89 e1                	mov    %esp,%ecx
 804827d:	83 e4 f0             	and    $0xfffffff0,%esp
 8048280:	50                   	push   %eax
 8048281:	54                   	push   %esp
 8048282:	52                   	push   %edx
 8048283:	68 ac 84 04 08       	push   $0x80484ac
 8048288:	68 7c 84 04 08       	push   $0x804847c
 804828d:	51                   	push   %ecx
 804828e:	56                   	push   %esi
 804828f:	68 6a 83 04 08       	push   $0x804836a
 8048294:	e8 bf ff ff ff       	call   8048258 <_init+0x28>
 8048299:	f4                   	hlt    
 804829a:	90                   	nop    
 804829b:	90                   	nop    

0804829c <call_gmon_start>:
 804829c:	55                   	push   %ebp
 804829d:	89 e5                	mov    %esp,%ebp
 804829f:	53                   	push   %ebx
 80482a0:	50                   	push   %eax
 80482a1:	e8 00 00 00 00       	call   80482a6 <call_gmon_start+0xa>
 80482a6:	5b                   	pop    %ebx
 80482a7:	81 c3 3a 14 00 00    	add    $0x143a,%ebx
 80482ad:	8b 83 14 00 00 00    	mov    0x14(%ebx),%eax
 80482b3:	85 c0                	test   %eax,%eax
 80482b5:	74 02                	je     80482b9 <call_gmon_start+0x1d>
 80482b7:	ff d0                	call   *%eax
 80482b9:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 80482bc:	c9                   	leave  
 80482bd:	c3                   	ret    
 80482be:	90                   	nop    
 80482bf:	90                   	nop    

080482c0 <__do_global_dtors_aux>:
 80482c0:	55                   	push   %ebp
 80482c1:	89 e5                	mov    %esp,%ebp
 80482c3:	83 ec 08             	sub    $0x8,%esp
 80482c6:	80 3d f8 96 04 08 00 	cmpb   $0x0,0x80496f8
 80482cd:	75 29                	jne    80482f8 <__do_global_dtors_aux+0x38>
 80482cf:	a1 dc 95 04 08       	mov    0x80495dc,%eax
 80482d4:	8b 10                	mov    (%eax),%edx
 80482d6:	85 d2                	test   %edx,%edx
 80482d8:	74 17                	je     80482f1 <__do_global_dtors_aux+0x31>
 80482da:	89 f6                	mov    %esi,%esi
 80482dc:	83 c0 04             	add    $0x4,%eax
 80482df:	a3 dc 95 04 08       	mov    %eax,0x80495dc
 80482e4:	ff d2                	call   *%edx
 80482e6:	a1 dc 95 04 08       	mov    0x80495dc,%eax
 80482eb:	8b 10                	mov    (%eax),%edx
 80482ed:	85 d2                	test   %edx,%edx
 80482ef:	75 eb                	jne    80482dc <__do_global_dtors_aux+0x1c>
 80482f1:	c6 05 f8 96 04 08 01 	movb   $0x1,0x80496f8
 80482f8:	c9                   	leave  
 80482f9:	c3                   	ret    
 80482fa:	89 f6                	mov    %esi,%esi

080482fc <frame_dummy>:
 80482fc:	55                   	push   %ebp
 80482fd:	89 e5                	mov    %esp,%ebp
 80482ff:	83 ec 08             	sub    $0x8,%esp
 8048302:	a1 dc 96 04 08       	mov    0x80496dc,%eax
 8048307:	85 c0                	test   %eax,%eax
 8048309:	74 19                	je     8048324 <frame_dummy+0x28>
 804830b:	b8 00 00 00 00       	mov    $0x0,%eax
 8048310:	85 c0                	test   %eax,%eax
 8048312:	74 10                	je     8048324 <frame_dummy+0x28>
 8048314:	83 ec 0c             	sub    $0xc,%esp
 8048317:	68 dc 96 04 08       	push   $0x80496dc
 804831c:	e8 df 7c fb f7       	call   0 <_init-0x8048230>
 8048321:	83 c4 10             	add    $0x10,%esp
 8048324:	c9                   	leave  
 8048325:	c3                   	ret    
 8048326:	90                   	nop    
 8048327:	90                   	nop    

08048328 <fun>:
 8048328:	55                   	push   %ebp
 8048329:	89 e5                	mov    %esp,%ebp
 804832b:	83 ec 08             	sub    $0x8,%esp
 804832e:	c7 45 fc 64 00 00 00 	movl   $0x64,0xfffffffc(%ebp)
 8048335:	c7 05 00 96 04 08 12 	movl   $0x1212,0x8049600
 804833c:	12 00 00 
 804833f:	83 ec 08             	sub    $0x8,%esp
 8048342:	8d 45 fc             	lea    0xfffffffc(%ebp),%eax
 8048345:	50                   	push   %eax
 8048346:	68 28 85 04 08       	push   $0x8048528
 804834b:	e8 18 ff ff ff       	call   8048268 <_init+0x38>
 8048350:	83 c4 10             	add    $0x10,%esp
 8048353:	83 ec 08             	sub    $0x8,%esp
 8048356:	68 00 96 04 08       	push   $0x8049600
 804835b:	68 38 85 04 08       	push   $0x8048538
 8048360:	e8 03 ff ff ff       	call   8048268 <_init+0x38>
 8048365:	83 c4 10             	add    $0x10,%esp
 8048368:	c9                   	leave  
 8048369:	c3                   	ret    

0804836a <main>:
 804836a:	55                   	push   %ebp
 804836b:	89 e5                	mov    %esp,%ebp
 804836d:	83 ec 08             	sub    $0x8,%esp
 8048370:	83 e4 f0             	and    $0xfffffff0,%esp
 8048373:	b8 00 00 00 00       	mov    $0x0,%eax
 8048378:	29 c4                	sub    %eax,%esp
 804837a:	c7 45 fc 00 00 00 00 	movl   $0x0,0xfffffffc(%ebp)
 8048381:	c7 45 f8 17 00 00 00 	movl   $0x17,0xfffffff8(%ebp)
 8048388:	8b 55 f8             	mov    0xfffffff8(%ebp),%edx
 804838b:	89 d0                	mov    %edx,%eax
 804838d:	c1 e0 03             	shl    $0x3,%eax
 8048390:	01 d0                	add    %edx,%eax
 8048392:	83 c0 02             	add    $0x2,%eax
 8048395:	89 45 fc             	mov    %eax,0xfffffffc(%ebp)
 8048398:	8b 15 e8 95 04 08    	mov    0x80495e8,%edx
 804839e:	a1 e0 95 04 08       	mov    0x80495e0,%eax
 80483a3:	29 d0                	sub    %edx,%eax
 80483a5:	89 45 f8             	mov    %eax,0xfffffff8(%ebp)
 80483a8:	a1 fc 96 04 08       	mov    0x80496fc,%eax
 80483ad:	03 05 e0 95 04 08    	add    0x80495e0,%eax
 80483b3:	a3 04 97 04 08       	mov    %eax,0x8049704
 80483b8:	83 ec 0c             	sub    $0xc,%esp
 80483bb:	68 44 85 04 08       	push   $0x8048544
 80483c0:	e8 a3 fe ff ff       	call   8048268 <_init+0x38>
 80483c5:	83 c4 10             	add    $0x10,%esp
 80483c8:	83 ec 08             	sub    $0x8,%esp
 80483cb:	68 e4 95 04 08       	push   $0x80495e4
 80483d0:	68 5a 85 04 08       	push   $0x804855a
 80483d5:	e8 8e fe ff ff       	call   8048268 <_init+0x38>
 80483da:	83 c4 10             	add    $0x10,%esp
 80483dd:	83 ec 08             	sub    $0x8,%esp
 80483e0:	68 fc 96 04 08       	push   $0x80496fc
 80483e5:	68 69 85 04 08       	push   $0x8048569
 80483ea:	e8 79 fe ff ff       	call   8048268 <_init+0x38>
 80483ef:	83 c4 10             	add    $0x10,%esp
 80483f2:	83 ec 08             	sub    $0x8,%esp
 80483f5:	68 04 97 04 08       	push   $0x8049704
 80483fa:	68 78 85 04 08       	push   $0x8048578
 80483ff:	e8 64 fe ff ff       	call   8048268 <_init+0x38>
 8048404:	83 c4 10             	add    $0x10,%esp
 8048407:	83 ec 08             	sub    $0x8,%esp
 804840a:	8d 45 fc             	lea    0xfffffffc(%ebp),%eax
 804840d:	50                   	push   %eax
 804840e:	68 87 85 04 08       	push   $0x8048587
 8048413:	e8 50 fe ff ff       	call   8048268 <_init+0x38>
 8048418:	83 c4 10             	add    $0x10,%esp
 804841b:	83 ec 08             	sub    $0x8,%esp
 804841e:	8d 45 f8             	lea    0xfffffff8(%ebp),%eax
 8048421:	50                   	push   %eax
 8048422:	68 96 85 04 08       	push   $0x8048596
 8048427:	e8 3c fe ff ff       	call   8048268 <_init+0x38>
 804842c:	83 c4 10             	add    $0x10,%esp
 804842f:	83 ec 08             	sub    $0x8,%esp
 8048432:	68 e0 95 04 08       	push   $0x80495e0
 8048437:	68 a5 85 04 08       	push   $0x80485a5
 804843c:	e8 27 fe ff ff       	call   8048268 <_init+0x38>
 8048441:	83 c4 10             	add    $0x10,%esp
 8048444:	83 ec 08             	sub    $0x8,%esp
 8048447:	68 e8 95 04 08       	push   $0x80495e8
 804844c:	68 b4 85 04 08       	push   $0x80485b4
 8048451:	e8 12 fe ff ff       	call   8048268 <_init+0x38>
 8048456:	83 c4 10             	add    $0x10,%esp
 8048459:	83 ec 08             	sub    $0x8,%esp
 804845c:	68 f0 95 04 08       	push   $0x80495f0
 8048461:	68 c3 85 04 08       	push   $0x80485c3
 8048466:	e8 fd fd ff ff       	call   8048268 <_init+0x38>
 804846b:	83 c4 10             	add    $0x10,%esp
 804846e:	e8 b5 fe ff ff       	call   8048328 <fun>
 8048473:	b8 00 00 00 00       	mov    $0x0,%eax
 8048478:	c9                   	leave  
 8048479:	c3                   	ret    
 804847a:	90                   	nop    
 804847b:	90                   	nop    

0804847c <__libc_csu_init>:
 804847c:	55                   	push   %ebp
 804847d:	89 e5                	mov    %esp,%ebp
 804847f:	56                   	push   %esi
 8048480:	53                   	push   %ebx
 8048481:	e8 aa fd ff ff       	call   8048230 <_init>
 8048486:	b8 d4 95 04 08       	mov    $0x80495d4,%eax
 804848b:	2d d4 95 04 08       	sub    $0x80495d4,%eax
 8048490:	c1 f8 02             	sar    $0x2,%eax
 8048493:	31 db                	xor    %ebx,%ebx
 8048495:	39 c3                	cmp    %eax,%ebx
 8048497:	73 0f                	jae    80484a8 <__libc_csu_init+0x2c>
 8048499:	89 c6                	mov    %eax,%esi
 804849b:	90                   	nop    
 804849c:	ff 14 9d d4 95 04 08 	call   *0x80495d4(,%ebx,4)
 80484a3:	43                   	inc    %ebx
 80484a4:	39 f3                	cmp    %esi,%ebx
 80484a6:	72 f4                	jb     804849c <__libc_csu_init+0x20>
 80484a8:	5b                   	pop    %ebx
 80484a9:	5e                   	pop    %esi
 80484aa:	c9                   	leave  
 80484ab:	c3                   	ret    

080484ac <__libc_csu_fini>:
 80484ac:	55                   	push   %ebp
 80484ad:	89 e5                	mov    %esp,%ebp
 80484af:	53                   	push   %ebx
 80484b0:	50                   	push   %eax
 80484b1:	b8 d4 95 04 08       	mov    $0x80495d4,%eax
 80484b6:	2d d4 95 04 08       	sub    $0x80495d4,%eax
 80484bb:	c1 f8 02             	sar    $0x2,%eax
 80484be:	85 c0                	test   %eax,%eax
 80484c0:	8d 58 ff             	lea    0xffffffff(%eax),%ebx
 80484c3:	75 0b                	jne    80484d0 <__libc_csu_fini+0x24>
 80484c5:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 80484c8:	c9                   	leave  
 80484c9:	e9 36 00 00 00       	jmp    8048504 <_fini>
 80484ce:	89 f6                	mov    %esi,%esi
 80484d0:	ff 14 9d d4 95 04 08 	call   *0x80495d4(,%ebx,4)
 80484d7:	89 da                	mov    %ebx,%edx
 80484d9:	4b                   	dec    %ebx
 80484da:	85 d2                	test   %edx,%edx
 80484dc:	75 f2                	jne    80484d0 <__libc_csu_fini+0x24>
 80484de:	eb e5                	jmp    80484c5 <__libc_csu_fini+0x19>

080484e0 <__do_global_ctors_aux>:
 80484e0:	55                   	push   %ebp
 80484e1:	89 e5                	mov    %esp,%ebp
 80484e3:	53                   	push   %ebx
 80484e4:	52                   	push   %edx
 80484e5:	a1 cc 96 04 08       	mov    0x80496cc,%eax
 80484ea:	83 f8 ff             	cmp    $0xffffffff,%eax
 80484ed:	bb cc 96 04 08       	mov    $0x80496cc,%ebx
 80484f2:	74 0c                	je     8048500 <__do_global_ctors_aux+0x20>
 80484f4:	83 eb 04             	sub    $0x4,%ebx
 80484f7:	ff d0                	call   *%eax
 80484f9:	8b 03                	mov    (%ebx),%eax
 80484fb:	83 f8 ff             	cmp    $0xffffffff,%eax
 80484fe:	75 f4                	jne    80484f4 <__do_global_ctors_aux+0x14>
 8048500:	58                   	pop    %eax
 8048501:	5b                   	pop    %ebx
 8048502:	c9                   	leave  
 8048503:	c3                   	ret    

main.elf:     file format elf32-i386

Disassembly of section .rodata:

08048520 <_fp_hw>:
 8048520:	03 00 00 00                                         ....

08048524 <_IO_stdin_used>:
 8048524:	01 00 02 00 26 6c 6f 63 61 6c 20 3d 20 30 78 25     ....&local = 0x%
 8048534:	78 20 0a 00 26 73 20 3d 20 30 78 25 78 20 0a 00     x ..&s = 0x%x ..
 8048544:	68 65 6c 6c 6f 2c 20 43 72 75 65 6c 20 57 6f 72     hello, Cruel Wor
 8048554:	6c 64 21 20 0a 00 26 62 73 73 30 20 3d 20 30 78     ld! ..&bss0 = 0x
 8048564:	25 78 20 0a 00 26 62 73 73 31 20 3d 20 30 78 25     %x ..&bss1 = 0x%
 8048574:	78 20 0a 00 26 62 73 73 32 20 3d 20 30 78 25 78     x ..&bss2 = 0x%x
 8048584:	20 0a 00 26 72 65 74 31 20 3d 20 30 78 25 78 20      ..&ret1 = 0x%x 
 8048594:	0a 00 26 72 65 74 32 20 3d 20 30 78 25 78 20 0a     ..&ret2 = 0x%x .
 80485a4:	00 26 76 61 72 31 20 3d 20 30 78 25 78 20 0a 00     .&var1 = 0x%x ..
 80485b4:	26 76 61 72 32 20 3d 20 30 78 25 78 20 0a 00 73     &var2 = 0x%x ..s
 80485c4:	74 72 20 3d 20 25 73 20 0a 00                       tr = %s ..

main.elf:     file format elf32-i386

Disassembly of section .data:

080495d4 <__data_start>:
 80495d4:	00 00                	add    %al,(%eax)
	...

080495d8 <__dso_handle>:
 80495d8:	00 00 00 00                                         ....

080495dc <p.0>:
 80495dc:	d8 96 04 08                                         ....

080495e0 <var1>:
 80495e0:	10 00 00 00                                         ....

080495e4 <bss0>:
 80495e4:	01 00 00 00                                         ....

080495e8 <var2>:
 80495e8:	12 00 00 00                                         ....

080495ec <addr>:
 80495ec:	00 00 00 00                                         ....

080495f0 <chvar>:
 80495f0:	61 61 62 62 63 63 00 00                             aabbcc..

080495f8 <ch>:
 80495f8:	41                                                  A

080495f9 <ch1>:
 80495f9:	42 00 00                                            B..

080495fc <ttt>:
 80495fc:	fe ff ff ff                                         ....

08049600 <s.0>:
 8049600:	c8 00 00 00                                         ....
