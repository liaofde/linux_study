
hello:     file format elf32-i386

Disassembly of section .text:

08048278 <_start>:
 8048278:	31 ed                	xor    %ebp,%ebp
 804827a:	5e                   	pop    %esi
 804827b:	89 e1                	mov    %esp,%ecx
 804827d:	83 e4 f0             	and    $0xfffffff0,%esp
 8048280:	50                   	push   %eax
 8048281:	54                   	push   %esp
 8048282:	52                   	push   %edx
 8048283:	68 14 85 04 08       	push   $0x8048514
 8048288:	68 e4 84 04 08       	push   $0x80484e4
 804828d:	51                   	push   %ecx
 804828e:	56                   	push   %esi
 804828f:	68 28 83 04 08       	push   $0x8048328
 8048294:	e8 bf ff ff ff       	call   8048258 <_init+0x28>
 8048299:	f4                   	hlt    
 804829a:	90                   	nop    
 804829b:	90                   	nop    

0804829c <call_gmon_start>:
 804829c:	55                   	push   %ebp
 804829d:	89 e5                	mov    %esp,%ebp
 804829f:	53                   	push   %ebx
 80482a0:	50                   	push   %eax
 80482a1:	e8 00 00 00 00       	call   80482a6 <call_gmon_start+0xa>
 80482a6:	5b                   	pop    %ebx
 80482a7:	81 c3 72 15 00 00    	add    $0x1572,%ebx
 80482ad:	8b 83 14 00 00 00    	mov    0x14(%ebx),%eax
 80482b3:	85 c0                	test   %eax,%eax
 80482b5:	74 02                	je     80482b9 <call_gmon_start+0x1d>
 80482b7:	ff d0                	call   *%eax
 80482b9:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 80482bc:	c9                   	leave  
 80482bd:	c3                   	ret    
 80482be:	90                   	nop    
 80482bf:	90                   	nop    

080482c0 <__do_global_dtors_aux>:
 80482c0:	55                   	push   %ebp
 80482c1:	89 e5                	mov    %esp,%ebp
 80482c3:	83 ec 08             	sub    $0x8,%esp
 80482c6:	80 3d 30 98 04 08 00 	cmpb   $0x0,0x8049830
 80482cd:	75 29                	jne    80482f8 <__do_global_dtors_aux+0x38>
 80482cf:	a1 e8 96 04 08       	mov    0x80496e8,%eax
 80482d4:	8b 10                	mov    (%eax),%edx
 80482d6:	85 d2                	test   %edx,%edx
 80482d8:	74 17                	je     80482f1 <__do_global_dtors_aux+0x31>
 80482da:	89 f6                	mov    %esi,%esi
 80482dc:	83 c0 04             	add    $0x4,%eax
 80482df:	a3 e8 96 04 08       	mov    %eax,0x80496e8
 80482e4:	ff d2                	call   *%edx
 80482e6:	a1 e8 96 04 08       	mov    0x80496e8,%eax
 80482eb:	8b 10                	mov    (%eax),%edx
 80482ed:	85 d2                	test   %edx,%edx
 80482ef:	75 eb                	jne    80482dc <__do_global_dtors_aux+0x1c>
 80482f1:	c6 05 30 98 04 08 01 	movb   $0x1,0x8049830
 80482f8:	c9                   	leave  
 80482f9:	c3                   	ret    
 80482fa:	89 f6                	mov    %esi,%esi

080482fc <frame_dummy>:
 80482fc:	55                   	push   %ebp
 80482fd:	89 e5                	mov    %esp,%ebp
 80482ff:	83 ec 08             	sub    $0x8,%esp
 8048302:	a1 14 98 04 08       	mov    0x8049814,%eax
 8048307:	85 c0                	test   %eax,%eax
 8048309:	74 19                	je     8048324 <frame_dummy+0x28>
 804830b:	b8 00 00 00 00       	mov    $0x0,%eax
 8048310:	85 c0                	test   %eax,%eax
 8048312:	74 10                	je     8048324 <frame_dummy+0x28>
 8048314:	83 ec 0c             	sub    $0xc,%esp
 8048317:	68 14 98 04 08       	push   $0x8049814
 804831c:	e8 df 7c fb f7       	call   0 <_init-0x8048230>
 8048321:	83 c4 10             	add    $0x10,%esp
 8048324:	c9                   	leave  
 8048325:	c3                   	ret    
 8048326:	90                   	nop    
 8048327:	90                   	nop    

08048328 <main>:

char name2[][15] = { "123", "456", "789", "000" };

int main( int argc, char * argv[] )
{
 8048328:	55                   	push   %ebp
 8048329:	89 e5                	mov    %esp,%ebp
 804832b:	83 ec 28             	sub    $0x28,%esp
 804832e:	83 e4 f0             	and    $0xfffffff0,%esp
 8048331:	b8 00 00 00 00       	mov    $0x0,%eax
 8048336:	29 c4                	sub    %eax,%esp
	char temp;
	char * name[] = { "Illegal month", "Jan", "Feb", "Mar" };
 8048338:	c7 45 d8 90 85 04 08 	movl   $0x8048590,0xffffffd8(%ebp)
 804833f:	c7 45 dc 9e 85 04 08 	movl   $0x804859e,0xffffffdc(%ebp)
 8048346:	c7 45 e0 a2 85 04 08 	movl   $0x80485a2,0xffffffe0(%ebp)
 804834d:	c7 45 e4 a6 85 04 08 	movl   $0x80485a6,0xffffffe4(%ebp)
	printf( "hello, Cruel World! \n" );
 8048354:	83 ec 0c             	sub    $0xc,%esp
 8048357:	68 aa 85 04 08       	push   $0x80485aa
 804835c:	e8 07 ff ff ff       	call   8048268 <_init+0x38>
 8048361:	83 c4 10             	add    $0x10,%esp

	//name++;
	//name2++;

	printf( "name2 = 0x%x \n", name2 );
 8048364:	83 ec 08             	sub    $0x8,%esp
 8048367:	68 00 97 04 08       	push   $0x8049700
 804836c:	68 c0 85 04 08       	push   $0x80485c0
 8048371:	e8 f2 fe ff ff       	call   8048268 <_init+0x38>
 8048376:	83 c4 10             	add    $0x10,%esp
	printf( "name2[1] = 0x%x \n", name2[1] );
 8048379:	83 ec 08             	sub    $0x8,%esp
 804837c:	68 0f 97 04 08       	push   $0x804970f
 8048381:	68 cf 85 04 08       	push   $0x80485cf
 8048386:	e8 dd fe ff ff       	call   8048268 <_init+0x38>
 804838b:	83 c4 10             	add    $0x10,%esp


	printf( "name = 0x%x \n", name );
 804838e:	83 ec 08             	sub    $0x8,%esp
 8048391:	8d 45 d8             	lea    0xffffffd8(%ebp),%eax
 8048394:	50                   	push   %eax
 8048395:	68 e1 85 04 08       	push   $0x80485e1
 804839a:	e8 c9 fe ff ff       	call   8048268 <_init+0x38>
 804839f:	83 c4 10             	add    $0x10,%esp
	//printf( "name = %s \n", name );
	printf( "-->> name[0] = 0x%x \n", name[0] );
 80483a2:	83 ec 08             	sub    $0x8,%esp
 80483a5:	ff 75 d8             	pushl  0xffffffd8(%ebp)
 80483a8:	68 ef 85 04 08       	push   $0x80485ef
 80483ad:	e8 b6 fe ff ff       	call   8048268 <_init+0x38>
 80483b2:	83 c4 10             	add    $0x10,%esp
	printf( "name[1] = %s \n", name[1] );
 80483b5:	83 ec 08             	sub    $0x8,%esp
 80483b8:	ff 75 dc             	pushl  0xffffffdc(%ebp)
 80483bb:	68 05 86 04 08       	push   $0x8048605
 80483c0:	e8 a3 fe ff ff       	call   8048268 <_init+0x38>
 80483c5:	83 c4 10             	add    $0x10,%esp
	printf( "name[2] = %s \n", name[2] );
 80483c8:	83 ec 08             	sub    $0x8,%esp
 80483cb:	ff 75 e0             	pushl  0xffffffe0(%ebp)
 80483ce:	68 14 86 04 08       	push   $0x8048614
 80483d3:	e8 90 fe ff ff       	call   8048268 <_init+0x38>
 80483d8:	83 c4 10             	add    $0x10,%esp
	printf( "name[3] = %s \n", name[3] );
 80483db:	83 ec 08             	sub    $0x8,%esp
 80483de:	ff 75 e4             	pushl  0xffffffe4(%ebp)
 80483e1:	68 23 86 04 08       	push   $0x8048623
 80483e6:	e8 7d fe ff ff       	call   8048268 <_init+0x38>
 80483eb:	83 c4 10             	add    $0x10,%esp

//	return 0;

	//name2[0] = name[0];

	printf( "1 name2[0] = %s \n", name2[0] );
 80483ee:	83 ec 08             	sub    $0x8,%esp
 80483f1:	68 00 97 04 08       	push   $0x8049700
 80483f6:	68 32 86 04 08       	push   $0x8048632
 80483fb:	e8 68 fe ff ff       	call   8048268 <_init+0x38>
 8048400:	83 c4 10             	add    $0x10,%esp

	//name2[0][0] = name[0];

	temp = name2[0][0];
 8048403:	a0 00 97 04 08       	mov    0x8049700,%al
 8048408:	88 45 f7             	mov    %al,0xfffffff7(%ebp)
	printf( "name2[0][0] = 0x%x %d \n", temp, temp );
 804840b:	83 ec 04             	sub    $0x4,%esp
 804840e:	0f be 45 f7          	movsbl 0xfffffff7(%ebp),%eax
 8048412:	50                   	push   %eax
 8048413:	0f be 45 f7          	movsbl 0xfffffff7(%ebp),%eax
 8048417:	50                   	push   %eax
 8048418:	68 44 86 04 08       	push   $0x8048644
 804841d:	e8 46 fe ff ff       	call   8048268 <_init+0x38>
 8048422:	83 c4 10             	add    $0x10,%esp

	printf( "%x \n", 'I' );
 8048425:	83 ec 08             	sub    $0x8,%esp
 8048428:	6a 49                	push   $0x49
 804842a:	68 5c 86 04 08       	push   $0x804865c
 804842f:	e8 34 fe ff ff       	call   8048268 <_init+0x38>
 8048434:	83 c4 10             	add    $0x10,%esp
	printf( "name[0] = %s \n", name[0] );
 8048437:	83 ec 08             	sub    $0x8,%esp
 804843a:	ff 75 d8             	pushl  0xffffffd8(%ebp)
 804843d:	68 61 86 04 08       	push   $0x8048661
 8048442:	e8 21 fe ff ff       	call   8048268 <_init+0x38>
 8048447:	83 c4 10             	add    $0x10,%esp
	printf( "name[0] = 0x%x \n", name[0] );
 804844a:	83 ec 08             	sub    $0x8,%esp
 804844d:	ff 75 d8             	pushl  0xffffffd8(%ebp)
 8048450:	68 70 86 04 08       	push   $0x8048670
 8048455:	e8 0e fe ff ff       	call   8048268 <_init+0x38>
 804845a:	83 c4 10             	add    $0x10,%esp
	printf( "2 name2[0] = %s \n", name2[0] );
 804845d:	83 ec 08             	sub    $0x8,%esp
 8048460:	68 00 97 04 08       	push   $0x8049700
 8048465:	68 81 86 04 08       	push   $0x8048681
 804846a:	e8 f9 fd ff ff       	call   8048268 <_init+0x38>
 804846f:	83 c4 10             	add    $0x10,%esp

	printf( "name2 = 0x%x \n", name2 );
 8048472:	83 ec 08             	sub    $0x8,%esp
 8048475:	68 00 97 04 08       	push   $0x8049700
 804847a:	68 c0 85 04 08       	push   $0x80485c0
 804847f:	e8 e4 fd ff ff       	call   8048268 <_init+0x38>
 8048484:	83 c4 10             	add    $0x10,%esp
	printf( "name2[0] = %s \n", name2[0] );
 8048487:	83 ec 08             	sub    $0x8,%esp
 804848a:	68 00 97 04 08       	push   $0x8049700
 804848f:	68 93 86 04 08       	push   $0x8048693
 8048494:	e8 cf fd ff ff       	call   8048268 <_init+0x38>
 8048499:	83 c4 10             	add    $0x10,%esp
	printf( "name2[1] = %s \n", name2[1] );
 804849c:	83 ec 08             	sub    $0x8,%esp
 804849f:	68 0f 97 04 08       	push   $0x804970f
 80484a4:	68 a3 86 04 08       	push   $0x80486a3
 80484a9:	e8 ba fd ff ff       	call   8048268 <_init+0x38>
 80484ae:	83 c4 10             	add    $0x10,%esp
	printf( "name2[2] = %s \n", name2[2] );
 80484b1:	83 ec 08             	sub    $0x8,%esp
 80484b4:	68 1e 97 04 08       	push   $0x804971e
 80484b9:	68 b3 86 04 08       	push   $0x80486b3
 80484be:	e8 a5 fd ff ff       	call   8048268 <_init+0x38>
 80484c3:	83 c4 10             	add    $0x10,%esp
	printf( "name2[3] = %s \n", name2[3] );
 80484c6:	83 ec 08             	sub    $0x8,%esp
 80484c9:	68 2d 97 04 08       	push   $0x804972d
 80484ce:	68 c3 86 04 08       	push   $0x80486c3
 80484d3:	e8 90 fd ff ff       	call   8048268 <_init+0x38>
 80484d8:	83 c4 10             	add    $0x10,%esp
	return 0;
 80484db:	b8 00 00 00 00       	mov    $0x0,%eax
}
 80484e0:	c9                   	leave  
 80484e1:	c3                   	ret    
 80484e2:	90                   	nop    
 80484e3:	90                   	nop    

080484e4 <__libc_csu_init>:
 80484e4:	55                   	push   %ebp
 80484e5:	89 e5                	mov    %esp,%ebp
 80484e7:	56                   	push   %esi
 80484e8:	53                   	push   %ebx
 80484e9:	e8 42 fd ff ff       	call   8048230 <_init>
 80484ee:	b8 d8 96 04 08       	mov    $0x80496d8,%eax
 80484f3:	2d d8 96 04 08       	sub    $0x80496d8,%eax
 80484f8:	c1 f8 02             	sar    $0x2,%eax
 80484fb:	31 db                	xor    %ebx,%ebx
 80484fd:	39 c3                	cmp    %eax,%ebx
 80484ff:	73 0f                	jae    8048510 <__libc_csu_init+0x2c>
 8048501:	89 c6                	mov    %eax,%esi
 8048503:	90                   	nop    
 8048504:	ff 14 9d d8 96 04 08 	call   *0x80496d8(,%ebx,4)
 804850b:	43                   	inc    %ebx
 804850c:	39 f3                	cmp    %esi,%ebx
 804850e:	72 f4                	jb     8048504 <__libc_csu_init+0x20>
 8048510:	5b                   	pop    %ebx
 8048511:	5e                   	pop    %esi
 8048512:	c9                   	leave  
 8048513:	c3                   	ret    

08048514 <__libc_csu_fini>:
 8048514:	55                   	push   %ebp
 8048515:	89 e5                	mov    %esp,%ebp
 8048517:	53                   	push   %ebx
 8048518:	50                   	push   %eax
 8048519:	b8 d8 96 04 08       	mov    $0x80496d8,%eax
 804851e:	2d d8 96 04 08       	sub    $0x80496d8,%eax
 8048523:	c1 f8 02             	sar    $0x2,%eax
 8048526:	85 c0                	test   %eax,%eax
 8048528:	8d 58 ff             	lea    0xffffffff(%eax),%ebx
 804852b:	75 0b                	jne    8048538 <__libc_csu_fini+0x24>
 804852d:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 8048530:	c9                   	leave  
 8048531:	e9 36 00 00 00       	jmp    804856c <_fini>
 8048536:	89 f6                	mov    %esi,%esi
 8048538:	ff 14 9d d8 96 04 08 	call   *0x80496d8(,%ebx,4)
 804853f:	89 da                	mov    %ebx,%edx
 8048541:	4b                   	dec    %ebx
 8048542:	85 d2                	test   %edx,%edx
 8048544:	75 f2                	jne    8048538 <__libc_csu_fini+0x24>
 8048546:	eb e5                	jmp    804852d <__libc_csu_fini+0x19>

08048548 <__do_global_ctors_aux>:
 8048548:	55                   	push   %ebp
 8048549:	89 e5                	mov    %esp,%ebp
 804854b:	53                   	push   %ebx
 804854c:	52                   	push   %edx
 804854d:	a1 04 98 04 08       	mov    0x8049804,%eax
 8048552:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048555:	bb 04 98 04 08       	mov    $0x8049804,%ebx
 804855a:	74 0c                	je     8048568 <__do_global_ctors_aux+0x20>
 804855c:	83 eb 04             	sub    $0x4,%ebx
 804855f:	ff d0                	call   *%eax
 8048561:	8b 03                	mov    (%ebx),%eax
 8048563:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048566:	75 f4                	jne    804855c <__do_global_ctors_aux+0x14>
 8048568:	58                   	pop    %eax
 8048569:	5b                   	pop    %ebx
 804856a:	c9                   	leave  
 804856b:	c3                   	ret    

hello:     file format elf32-i386

Disassembly of section .rodata:

08048588 <_fp_hw>:
 8048588:	03 00 00 00                                         ....

0804858c <_IO_stdin_used>:
 804858c:	01 00 02 00 49 6c 6c 65 67 61 6c 20 6d 6f 6e 74     ....Illegal mont
 804859c:	68 00 4a 61 6e 00 46 65 62 00 4d 61 72 00 68 65     h.Jan.Feb.Mar.he
 80485ac:	6c 6c 6f 2c 20 43 72 75 65 6c 20 57 6f 72 6c 64     llo, Cruel World
 80485bc:	21 20 0a 00 6e 61 6d 65 32 20 3d 20 30 78 25 78     ! ..name2 = 0x%x
 80485cc:	20 0a 00 6e 61 6d 65 32 5b 31 5d 20 3d 20 30 78      ..name2[1] = 0x
 80485dc:	25 78 20 0a 00 6e 61 6d 65 20 3d 20 30 78 25 78     %x ..name = 0x%x
 80485ec:	20 0a 00 2d 2d 3e 3e 20 6e 61 6d 65 5b 30 5d 20      ..-->> name[0] 
 80485fc:	3d 20 30 78 25 78 20 0a 00 6e 61 6d 65 5b 31 5d     = 0x%x ..name[1]
 804860c:	20 3d 20 25 73 20 0a 00 6e 61 6d 65 5b 32 5d 20      = %s ..name[2] 
 804861c:	3d 20 25 73 20 0a 00 6e 61 6d 65 5b 33 5d 20 3d     = %s ..name[3] =
 804862c:	20 25 73 20 0a 00 31 20 6e 61 6d 65 32 5b 30 5d      %s ..1 name2[0]
 804863c:	20 3d 20 25 73 20 0a 00 6e 61 6d 65 32 5b 30 5d      = %s ..name2[0]
 804864c:	5b 30 5d 20 3d 20 30 78 25 78 20 25 64 20 0a 00     [0] = 0x%x %d ..
 804865c:	25 78 20 0a 00 6e 61 6d 65 5b 30 5d 20 3d 20 25     %x ..name[0] = %
 804866c:	73 20 0a 00 6e 61 6d 65 5b 30 5d 20 3d 20 30 78     s ..name[0] = 0x
 804867c:	25 78 20 0a 00 32 20 6e 61 6d 65 32 5b 30 5d 20     %x ..2 name2[0] 
 804868c:	3d 20 25 73 20 0a 00 6e 61 6d 65 32 5b 30 5d 20     = %s ..name2[0] 
 804869c:	3d 20 25 73 20 0a 00 6e 61 6d 65 32 5b 31 5d 20     = %s ..name2[1] 
 80486ac:	3d 20 25 73 20 0a 00 6e 61 6d 65 32 5b 32 5d 20     = %s ..name2[2] 
 80486bc:	3d 20 25 73 20 0a 00 6e 61 6d 65 32 5b 33 5d 20     = %s ..name2[3] 
 80486cc:	3d 20 25 73 20 0a 00                                = %s ..

hello:     file format elf32-i386

Disassembly of section .data:

080496e0 <__data_start>:
 80496e0:	00 00                	add    %al,(%eax)
	...

080496e4 <__dso_handle>:
 80496e4:	00 00 00 00                                         ....

080496e8 <p.0>:
 80496e8:	10 98 04 08 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

08049700 <name2>:
 8049700:	31 32 33 00 00 00 00 00 00 00 00 00 00 00 00 34     123............4
 8049710:	35 36 00 00 00 00 00 00 00 00 00 00 00 00 37 38     56............78
 8049720:	39 00 00 00 00 00 00 00 00 00 00 00 00 30 30 30     9............000
	...
