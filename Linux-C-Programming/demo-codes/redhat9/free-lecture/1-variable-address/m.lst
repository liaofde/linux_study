
main.elf:     file format elf32-i386

Disassembly of section .text:

08048278 <_start>:
 8048278:	31 ed                	xor    %ebp,%ebp
 804827a:	5e                   	pop    %esi
 804827b:	89 e1                	mov    %esp,%ecx
 804827d:	83 e4 f0             	and    $0xfffffff0,%esp
 8048280:	50                   	push   %eax
 8048281:	54                   	push   %esp
 8048282:	52                   	push   %edx
 8048283:	68 74 84 04 08       	push   $0x8048474
 8048288:	68 44 84 04 08       	push   $0x8048444
 804828d:	51                   	push   %ecx
 804828e:	56                   	push   %esi
 804828f:	68 28 83 04 08       	push   $0x8048328
 8048294:	e8 bf ff ff ff       	call   8048258 <_init+0x28>
 8048299:	f4                   	hlt    
 804829a:	90                   	nop    
 804829b:	90                   	nop    

0804829c <call_gmon_start>:
 804829c:	55                   	push   %ebp
 804829d:	89 e5                	mov    %esp,%ebp
 804829f:	53                   	push   %ebx
 80482a0:	50                   	push   %eax
 80482a1:	e8 00 00 00 00       	call   80482a6 <call_gmon_start+0xa>
 80482a6:	5b                   	pop    %ebx
 80482a7:	81 c3 ee 14 00 00    	add    $0x14ee,%ebx
 80482ad:	8b 83 14 00 00 00    	mov    0x14(%ebx),%eax
 80482b3:	85 c0                	test   %eax,%eax
 80482b5:	74 02                	je     80482b9 <call_gmon_start+0x1d>
 80482b7:	ff d0                	call   *%eax
 80482b9:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 80482bc:	c9                   	leave  
 80482bd:	c3                   	ret    
 80482be:	90                   	nop    
 80482bf:	90                   	nop    

080482c0 <__do_global_dtors_aux>:
 80482c0:	55                   	push   %ebp
 80482c1:	89 e5                	mov    %esp,%ebp
 80482c3:	83 ec 08             	sub    $0x8,%esp
 80482c6:	80 3d ac 97 04 08 00 	cmpb   $0x0,0x80497ac
 80482cd:	75 29                	jne    80482f8 <__do_global_dtors_aux+0x38>
 80482cf:	a1 9c 96 04 08       	mov    0x804969c,%eax
 80482d4:	8b 10                	mov    (%eax),%edx
 80482d6:	85 d2                	test   %edx,%edx
 80482d8:	74 17                	je     80482f1 <__do_global_dtors_aux+0x31>
 80482da:	89 f6                	mov    %esi,%esi
 80482dc:	83 c0 04             	add    $0x4,%eax
 80482df:	a3 9c 96 04 08       	mov    %eax,0x804969c
 80482e4:	ff d2                	call   *%edx
 80482e6:	a1 9c 96 04 08       	mov    0x804969c,%eax
 80482eb:	8b 10                	mov    (%eax),%edx
 80482ed:	85 d2                	test   %edx,%edx
 80482ef:	75 eb                	jne    80482dc <__do_global_dtors_aux+0x1c>
 80482f1:	c6 05 ac 97 04 08 01 	movb   $0x1,0x80497ac
 80482f8:	c9                   	leave  
 80482f9:	c3                   	ret    
 80482fa:	89 f6                	mov    %esi,%esi

080482fc <frame_dummy>:
 80482fc:	55                   	push   %ebp
 80482fd:	89 e5                	mov    %esp,%ebp
 80482ff:	83 ec 08             	sub    $0x8,%esp
 8048302:	a1 90 97 04 08       	mov    0x8049790,%eax
 8048307:	85 c0                	test   %eax,%eax
 8048309:	74 19                	je     8048324 <frame_dummy+0x28>
 804830b:	b8 00 00 00 00       	mov    $0x0,%eax
 8048310:	85 c0                	test   %eax,%eax
 8048312:	74 10                	je     8048324 <frame_dummy+0x28>
 8048314:	83 ec 0c             	sub    $0xc,%esp
 8048317:	68 90 97 04 08       	push   $0x8049790
 804831c:	e8 df 7c fb f7       	call   0 <_init-0x8048230>
 8048321:	83 c4 10             	add    $0x10,%esp
 8048324:	c9                   	leave  
 8048325:	c3                   	ret    
 8048326:	90                   	nop    
 8048327:	90                   	nop    

08048328 <main>:
 8048328:	55                   	push   %ebp
 8048329:	89 e5                	mov    %esp,%ebp
 804832b:	83 ec 18             	sub    $0x18,%esp
 804832e:	83 e4 f0             	and    $0xfffffff0,%esp
 8048331:	b8 00 00 00 00       	mov    $0x0,%eax
 8048336:	29 c4                	sub    %eax,%esp
 8048338:	c7 45 fc 64 00 00 00 	movl   $0x64,0xfffffffc(%ebp)
 804833f:	c7 45 f8 c8 00 00 00 	movl   $0xc8,0xfffffff8(%ebp)
 8048346:	c7 45 f4 00 00 00 00 	movl   $0x0,0xfffffff4(%ebp)
 804834d:	83 ec 08             	sub    $0x8,%esp
 8048350:	8d 45 fc             	lea    0xfffffffc(%ebp),%eax
 8048353:	50                   	push   %eax
 8048354:	68 24 85 04 08       	push   $0x8048524
 8048359:	e8 0a ff ff ff       	call   8048268 <_init+0x38>
 804835e:	83 c4 10             	add    $0x10,%esp
 8048361:	83 ec 08             	sub    $0x8,%esp
 8048364:	8d 45 f8             	lea    0xfffffff8(%ebp),%eax
 8048367:	50                   	push   %eax
 8048368:	68 40 85 04 08       	push   $0x8048540
 804836d:	e8 f6 fe ff ff       	call   8048268 <_init+0x38>
 8048372:	83 c4 10             	add    $0x10,%esp
 8048375:	83 ec 08             	sub    $0x8,%esp
 8048378:	68 a4 96 04 08       	push   $0x80496a4
 804837d:	68 60 85 04 08       	push   $0x8048560
 8048382:	e8 e1 fe ff ff       	call   8048268 <_init+0x38>
 8048387:	83 c4 10             	add    $0x10,%esp
 804838a:	83 ec 08             	sub    $0x8,%esp
 804838d:	68 a8 96 04 08       	push   $0x80496a8
 8048392:	68 a0 85 04 08       	push   $0x80485a0
 8048397:	e8 cc fe ff ff       	call   8048268 <_init+0x38>
 804839c:	83 c4 10             	add    $0x10,%esp
 804839f:	b8 00 00 00 00       	mov    $0x0,%eax
 80483a4:	c9                   	leave  
 80483a5:	c3                   	ret    
 80483a6:	90                   	nop    
 80483a7:	90                   	nop    

080483a8 <add>:
 80483a8:	55                   	push   %ebp
 80483a9:	89 e5                	mov    %esp,%ebp
 80483ab:	83 ec 08             	sub    $0x8,%esp
 80483ae:	c7 45 fc 01 00 00 00 	movl   $0x1,0xfffffffc(%ebp)
 80483b5:	c7 45 f8 01 00 00 00 	movl   $0x1,0xfffffff8(%ebp)
 80483bc:	83 ec 08             	sub    $0x8,%esp
 80483bf:	68 b4 96 04 08       	push   $0x80496b4
 80483c4:	68 e0 85 04 08       	push   $0x80485e0
 80483c9:	e8 9a fe ff ff       	call   8048268 <_init+0x38>
 80483ce:	83 c4 10             	add    $0x10,%esp
 80483d1:	83 ec 08             	sub    $0x8,%esp
 80483d4:	ff 35 b4 96 04 08    	pushl  0x80496b4
 80483da:	68 03 86 04 08       	push   $0x8048603
 80483df:	e8 84 fe ff ff       	call   8048268 <_init+0x38>
 80483e4:	83 c4 10             	add    $0x10,%esp
 80483e7:	83 ec 08             	sub    $0x8,%esp
 80483ea:	8d 45 fc             	lea    0xfffffffc(%ebp),%eax
 80483ed:	50                   	push   %eax
 80483ee:	68 1c 86 04 08       	push   $0x804861c
 80483f3:	e8 70 fe ff ff       	call   8048268 <_init+0x38>
 80483f8:	83 c4 10             	add    $0x10,%esp
 80483fb:	83 ec 08             	sub    $0x8,%esp
 80483fe:	8d 45 f8             	lea    0xfffffff8(%ebp),%eax
 8048401:	50                   	push   %eax
 8048402:	68 38 86 04 08       	push   $0x8048638
 8048407:	e8 5c fe ff ff       	call   8048268 <_init+0x38>
 804840c:	83 c4 10             	add    $0x10,%esp
 804840f:	83 ec 08             	sub    $0x8,%esp
 8048412:	68 ac 96 04 08       	push   $0x80496ac
 8048417:	68 54 86 04 08       	push   $0x8048654
 804841c:	e8 47 fe ff ff       	call   8048268 <_init+0x38>
 8048421:	83 c4 10             	add    $0x10,%esp
 8048424:	83 ec 08             	sub    $0x8,%esp
 8048427:	68 b0 96 04 08       	push   $0x80496b0
 804842c:	68 72 86 04 08       	push   $0x8048672
 8048431:	e8 32 fe ff ff       	call   8048268 <_init+0x38>
 8048436:	83 c4 10             	add    $0x10,%esp
 8048439:	8b 45 0c             	mov    0xc(%ebp),%eax
 804843c:	03 45 08             	add    0x8(%ebp),%eax
 804843f:	c9                   	leave  
 8048440:	c3                   	ret    
 8048441:	90                   	nop    
 8048442:	90                   	nop    
 8048443:	90                   	nop    

08048444 <__libc_csu_init>:
 8048444:	55                   	push   %ebp
 8048445:	89 e5                	mov    %esp,%ebp
 8048447:	56                   	push   %esi
 8048448:	53                   	push   %ebx
 8048449:	e8 e2 fd ff ff       	call   8048230 <_init>
 804844e:	b8 94 96 04 08       	mov    $0x8049694,%eax
 8048453:	2d 94 96 04 08       	sub    $0x8049694,%eax
 8048458:	c1 f8 02             	sar    $0x2,%eax
 804845b:	31 db                	xor    %ebx,%ebx
 804845d:	39 c3                	cmp    %eax,%ebx
 804845f:	73 0f                	jae    8048470 <__libc_csu_init+0x2c>
 8048461:	89 c6                	mov    %eax,%esi
 8048463:	90                   	nop    
 8048464:	ff 14 9d 94 96 04 08 	call   *0x8049694(,%ebx,4)
 804846b:	43                   	inc    %ebx
 804846c:	39 f3                	cmp    %esi,%ebx
 804846e:	72 f4                	jb     8048464 <__libc_csu_init+0x20>
 8048470:	5b                   	pop    %ebx
 8048471:	5e                   	pop    %esi
 8048472:	c9                   	leave  
 8048473:	c3                   	ret    

08048474 <__libc_csu_fini>:
 8048474:	55                   	push   %ebp
 8048475:	89 e5                	mov    %esp,%ebp
 8048477:	53                   	push   %ebx
 8048478:	50                   	push   %eax
 8048479:	b8 94 96 04 08       	mov    $0x8049694,%eax
 804847e:	2d 94 96 04 08       	sub    $0x8049694,%eax
 8048483:	c1 f8 02             	sar    $0x2,%eax
 8048486:	85 c0                	test   %eax,%eax
 8048488:	8d 58 ff             	lea    0xffffffff(%eax),%ebx
 804848b:	75 0b                	jne    8048498 <__libc_csu_fini+0x24>
 804848d:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 8048490:	c9                   	leave  
 8048491:	e9 36 00 00 00       	jmp    80484cc <_fini>
 8048496:	89 f6                	mov    %esi,%esi
 8048498:	ff 14 9d 94 96 04 08 	call   *0x8049694(,%ebx,4)
 804849f:	89 da                	mov    %ebx,%edx
 80484a1:	4b                   	dec    %ebx
 80484a2:	85 d2                	test   %edx,%edx
 80484a4:	75 f2                	jne    8048498 <__libc_csu_fini+0x24>
 80484a6:	eb e5                	jmp    804848d <__libc_csu_fini+0x19>

080484a8 <__do_global_ctors_aux>:
 80484a8:	55                   	push   %ebp
 80484a9:	89 e5                	mov    %esp,%ebp
 80484ab:	53                   	push   %ebx
 80484ac:	52                   	push   %edx
 80484ad:	a1 80 97 04 08       	mov    0x8049780,%eax
 80484b2:	83 f8 ff             	cmp    $0xffffffff,%eax
 80484b5:	bb 80 97 04 08       	mov    $0x8049780,%ebx
 80484ba:	74 0c                	je     80484c8 <__do_global_ctors_aux+0x20>
 80484bc:	83 eb 04             	sub    $0x4,%ebx
 80484bf:	ff d0                	call   *%eax
 80484c1:	8b 03                	mov    (%ebx),%eax
 80484c3:	83 f8 ff             	cmp    $0xffffffff,%eax
 80484c6:	75 f4                	jne    80484bc <__do_global_ctors_aux+0x14>
 80484c8:	58                   	pop    %eax
 80484c9:	5b                   	pop    %ebx
 80484ca:	c9                   	leave  
 80484cb:	c3                   	ret    

main.elf:     file format elf32-i386

Disassembly of section .rodata:

08048500 <_fp_hw>:
 8048500:	03 00 00 00                                         ....

08048504 <_IO_stdin_used>:
 8048504:	01 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

08048520 <const_num>:
 8048520:	99 99 00 00 3c 6d 61 69 6e 2e 63 3e 20 61 64 64     ....<main.c> add
 8048530:	72 65 73 73 20 61 20 3d 20 30 78 25 78 20 0a 00     ress a = 0x%x ..
 8048540:	3c 6d 61 69 6e 2e 63 3e 20 61 64 64 72 65 73 73     <main.c> address
 8048550:	20 62 20 3d 20 30 78 25 78 20 0a 00 00 00 00 00      b = 0x%x ......
 8048560:	3c 6d 61 69 6e 2e 63 3e 20 61 61 64 64 72 65 73     <main.c> aaddres
 8048570:	73 20 61 5f 6f 75 74 20 3d 20 30 78 25 78 20 0a     s a_out = 0x%x .
	...
 80485a0:	3c 6d 61 69 6e 2e 63 3e 20 61 61 64 64 72 65 73     <main.c> aaddres
 80485b0:	73 20 62 5f 6f 75 74 20 3d 20 30 78 25 78 20 0a     s b_out = 0x%x .
	...
 80485e0:	3c 61 64 64 2e 63 3e 20 61 64 64 72 65 73 73 20     <add.c> address 
 80485f0:	73 74 61 74 69 63 20 61 20 20 3d 20 30 78 25 78     static a  = 0x%x
 8048600:	20 0a 00 3c 61 64 64 2e 63 3e 20 73 74 61 74 69      ..<add.c> stati
 8048610:	63 20 61 20 20 3d 20 25 64 20 0a 00 3c 61 64 64     c a  = %d ..<add
 8048620:	2e 63 3e 20 61 64 64 72 65 73 73 20 61 61 20 3d     .c> address aa =
 8048630:	20 30 78 25 78 20 0a 00 3c 61 64 64 2e 63 3e 20      0x%x ..<add.c> 
 8048640:	61 64 64 72 65 73 73 20 62 62 20 3d 20 30 78 25     address bb = 0x%
 8048650:	78 20 0a 00 3c 61 64 64 2e 63 3e 20 61 64 64 72     x ..<add.c> addr
 8048660:	65 73 73 20 61 64 64 61 20 3d 20 30 78 25 78 20     ess adda = 0x%x 
 8048670:	0a 00 3c 61 64 64 2e 63 3e 20 61 64 64 72 65 73     ..<add.c> addres
 8048680:	73 20 61 64 64 62 20 3d 20 30 78 25 78 20 0a 00     s addb = 0x%x ..

main.elf:     file format elf32-i386

Disassembly of section .data:

08049694 <__data_start>:
 8049694:	00 00                	add    %al,(%eax)
	...

08049698 <__dso_handle>:
 8049698:	00 00 00 00                                         ....

0804969c <p.0>:
 804969c:	8c 97 04 08                                         ....

080496a0 <globle_var>:
 80496a0:	34 12 00 00                                         4...

080496a4 <a_out>:
 80496a4:	0a 00 00 00                                         ....

080496a8 <b_out>:
 80496a8:	14 00 00 00                                         ....

080496ac <adda>:
 80496ac:	01 00 00 00                                         ....

080496b0 <addb>:
 80496b0:	02 00 00 00                                         ....

080496b4 <sta_a.0>:
 80496b4:	01 00 00 00                                         ....
