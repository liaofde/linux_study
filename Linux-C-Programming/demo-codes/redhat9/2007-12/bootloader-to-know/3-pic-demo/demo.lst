
demo:     file format elf32-i386

Disassembly of section .text:

08048278 <_start>:
 8048278:	31 ed                	xor    %ebp,%ebp
 804827a:	5e                   	pop    %esi
 804827b:	89 e1                	mov    %esp,%ecx
 804827d:	83 e4 f0             	and    $0xfffffff0,%esp
 8048280:	50                   	push   %eax
 8048281:	54                   	push   %esp
 8048282:	52                   	push   %edx
 8048283:	68 14 84 04 08       	push   $0x8048414
 8048288:	68 e4 83 04 08       	push   $0x80483e4
 804828d:	51                   	push   %ecx
 804828e:	56                   	push   %esi
 804828f:	68 28 83 04 08       	push   $0x8048328
 8048294:	e8 bf ff ff ff       	call   8048258 <_init+0x28>
 8048299:	f4                   	hlt    
 804829a:	90                   	nop    
 804829b:	90                   	nop    

0804829c <call_gmon_start>:
 804829c:	55                   	push   %ebp
 804829d:	89 e5                	mov    %esp,%ebp
 804829f:	53                   	push   %ebx
 80482a0:	50                   	push   %eax
 80482a1:	e8 00 00 00 00       	call   80482a6 <call_gmon_start+0xa>
 80482a6:	5b                   	pop    %ebx
 80482a7:	81 c3 42 13 00 00    	add    $0x1342,%ebx
 80482ad:	8b 83 14 00 00 00    	mov    0x14(%ebx),%eax
 80482b3:	85 c0                	test   %eax,%eax
 80482b5:	74 02                	je     80482b9 <call_gmon_start+0x1d>
 80482b7:	ff d0                	call   *%eax
 80482b9:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 80482bc:	c9                   	leave  
 80482bd:	c3                   	ret    
 80482be:	90                   	nop    
 80482bf:	90                   	nop    

080482c0 <__do_global_dtors_aux>:
 80482c0:	55                   	push   %ebp
 80482c1:	89 e5                	mov    %esp,%ebp
 80482c3:	83 ec 08             	sub    $0x8,%esp
 80482c6:	80 3d 00 96 04 08 00 	cmpb   $0x0,0x8049600
 80482cd:	75 29                	jne    80482f8 <__do_global_dtors_aux+0x38>
 80482cf:	a1 04 95 04 08       	mov    0x8049504,%eax
 80482d4:	8b 10                	mov    (%eax),%edx
 80482d6:	85 d2                	test   %edx,%edx
 80482d8:	74 17                	je     80482f1 <__do_global_dtors_aux+0x31>
 80482da:	89 f6                	mov    %esi,%esi
 80482dc:	83 c0 04             	add    $0x4,%eax
 80482df:	a3 04 95 04 08       	mov    %eax,0x8049504
 80482e4:	ff d2                	call   *%edx
 80482e6:	a1 04 95 04 08       	mov    0x8049504,%eax
 80482eb:	8b 10                	mov    (%eax),%edx
 80482ed:	85 d2                	test   %edx,%edx
 80482ef:	75 eb                	jne    80482dc <__do_global_dtors_aux+0x1c>
 80482f1:	c6 05 00 96 04 08 01 	movb   $0x1,0x8049600
 80482f8:	c9                   	leave  
 80482f9:	c3                   	ret    
 80482fa:	89 f6                	mov    %esi,%esi

080482fc <frame_dummy>:
 80482fc:	55                   	push   %ebp
 80482fd:	89 e5                	mov    %esp,%ebp
 80482ff:	83 ec 08             	sub    $0x8,%esp
 8048302:	a1 e4 95 04 08       	mov    0x80495e4,%eax
 8048307:	85 c0                	test   %eax,%eax
 8048309:	74 19                	je     8048324 <frame_dummy+0x28>
 804830b:	b8 00 00 00 00       	mov    $0x0,%eax
 8048310:	85 c0                	test   %eax,%eax
 8048312:	74 10                	je     8048324 <frame_dummy+0x28>
 8048314:	83 ec 0c             	sub    $0xc,%esp
 8048317:	68 e4 95 04 08       	push   $0x80495e4
 804831c:	e8 df 7c fb f7       	call   0 <_init-0x8048230>
 8048321:	83 c4 10             	add    $0x10,%esp
 8048324:	c9                   	leave  
 8048325:	c3                   	ret    
 8048326:	90                   	nop    
 8048327:	90                   	nop    

08048328 <main>:
 8048328:	55                   	push   %ebp
 8048329:	89 e5                	mov    %esp,%ebp
 804832b:	83 ec 18             	sub    $0x18,%esp
 804832e:	83 e4 f0             	and    $0xfffffff0,%esp
 8048331:	b8 00 00 00 00       	mov    $0x0,%eax
 8048336:	29 c4                	sub    %eax,%esp
 8048338:	c7 45 fc 64 00 00 00 	movl   $0x64,0xfffffffc(%ebp)
 804833f:	c7 45 f4 c8 00 00 00 	movl   $0xc8,0xfffffff4(%ebp)
 8048346:	83 ec 08             	sub    $0x8,%esp
 8048349:	8d 45 f4             	lea    0xfffffff4(%ebp),%eax
 804834c:	50                   	push   %eax
 804834d:	68 90 84 04 08       	push   $0x8048490
 8048352:	e8 11 ff ff ff       	call   8048268 <_init+0x38>
 8048357:	83 c4 10             	add    $0x10,%esp
 804835a:	83 ec 08             	sub    $0x8,%esp
 804835d:	8d 45 fc             	lea    0xfffffffc(%ebp),%eax
 8048360:	50                   	push   %eax
 8048361:	68 a0 84 04 08       	push   $0x80484a0
 8048366:	e8 fd fe ff ff       	call   8048268 <_init+0x38>
 804836b:	83 c4 10             	add    $0x10,%esp
 804836e:	83 ec 08             	sub    $0x8,%esp
 8048371:	68 08 95 04 08       	push   $0x8049508
 8048376:	68 b0 84 04 08       	push   $0x80484b0
 804837b:	e8 e8 fe ff ff       	call   8048268 <_init+0x38>
 8048380:	83 c4 10             	add    $0x10,%esp
 8048383:	83 ec 08             	sub    $0x8,%esp
 8048386:	8d 45 f8             	lea    0xfffffff8(%ebp),%eax
 8048389:	50                   	push   %eax
 804838a:	68 c0 84 04 08       	push   $0x80484c0
 804838f:	e8 d4 fe ff ff       	call   8048268 <_init+0x38>
 8048394:	83 c4 10             	add    $0x10,%esp
 8048397:	83 ec 08             	sub    $0x8,%esp
 804839a:	8d 45 f0             	lea    0xfffffff0(%ebp),%eax
 804839d:	50                   	push   %eax
 804839e:	68 d2 84 04 08       	push   $0x80484d2
 80483a3:	e8 c0 fe ff ff       	call   8048268 <_init+0x38>
 80483a8:	83 c4 10             	add    $0x10,%esp
 80483ab:	83 ec 08             	sub    $0x8,%esp
 80483ae:	68 04 96 04 08       	push   $0x8049604
 80483b3:	68 e4 84 04 08       	push   $0x80484e4
 80483b8:	e8 ab fe ff ff       	call   8048268 <_init+0x38>
 80483bd:	83 c4 10             	add    $0x10,%esp
 80483c0:	b8 00 00 00 00       	mov    $0x0,%eax
 80483c5:	c9                   	leave  
 80483c6:	c3                   	ret    
 80483c7:	90                   	nop    

080483c8 <add>:
 80483c8:	55                   	push   %ebp
 80483c9:	89 e5                	mov    %esp,%ebp
 80483cb:	8b 45 0c             	mov    0xc(%ebp),%eax
 80483ce:	03 45 08             	add    0x8(%ebp),%eax
 80483d1:	c9                   	leave  
 80483d2:	c3                   	ret    
 80483d3:	90                   	nop    

080483d4 <sub>:
 80483d4:	55                   	push   %ebp
 80483d5:	89 e5                	mov    %esp,%ebp
 80483d7:	8b 55 0c             	mov    0xc(%ebp),%edx
 80483da:	8b 45 08             	mov    0x8(%ebp),%eax
 80483dd:	29 d0                	sub    %edx,%eax
 80483df:	c9                   	leave  
 80483e0:	c3                   	ret    
 80483e1:	90                   	nop    
 80483e2:	90                   	nop    
 80483e3:	90                   	nop    

080483e4 <__libc_csu_init>:
 80483e4:	55                   	push   %ebp
 80483e5:	89 e5                	mov    %esp,%ebp
 80483e7:	56                   	push   %esi
 80483e8:	53                   	push   %ebx
 80483e9:	e8 42 fe ff ff       	call   8048230 <_init>
 80483ee:	b8 fc 94 04 08       	mov    $0x80494fc,%eax
 80483f3:	2d fc 94 04 08       	sub    $0x80494fc,%eax
 80483f8:	c1 f8 02             	sar    $0x2,%eax
 80483fb:	31 db                	xor    %ebx,%ebx
 80483fd:	39 c3                	cmp    %eax,%ebx
 80483ff:	73 0f                	jae    8048410 <__libc_csu_init+0x2c>
 8048401:	89 c6                	mov    %eax,%esi
 8048403:	90                   	nop    
 8048404:	ff 14 9d fc 94 04 08 	call   *0x80494fc(,%ebx,4)
 804840b:	43                   	inc    %ebx
 804840c:	39 f3                	cmp    %esi,%ebx
 804840e:	72 f4                	jb     8048404 <__libc_csu_init+0x20>
 8048410:	5b                   	pop    %ebx
 8048411:	5e                   	pop    %esi
 8048412:	c9                   	leave  
 8048413:	c3                   	ret    

08048414 <__libc_csu_fini>:
 8048414:	55                   	push   %ebp
 8048415:	89 e5                	mov    %esp,%ebp
 8048417:	53                   	push   %ebx
 8048418:	50                   	push   %eax
 8048419:	b8 fc 94 04 08       	mov    $0x80494fc,%eax
 804841e:	2d fc 94 04 08       	sub    $0x80494fc,%eax
 8048423:	c1 f8 02             	sar    $0x2,%eax
 8048426:	85 c0                	test   %eax,%eax
 8048428:	8d 58 ff             	lea    0xffffffff(%eax),%ebx
 804842b:	75 0b                	jne    8048438 <__libc_csu_fini+0x24>
 804842d:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 8048430:	c9                   	leave  
 8048431:	e9 36 00 00 00       	jmp    804846c <_fini>
 8048436:	89 f6                	mov    %esi,%esi
 8048438:	ff 14 9d fc 94 04 08 	call   *0x80494fc(,%ebx,4)
 804843f:	89 da                	mov    %ebx,%edx
 8048441:	4b                   	dec    %ebx
 8048442:	85 d2                	test   %edx,%edx
 8048444:	75 f2                	jne    8048438 <__libc_csu_fini+0x24>
 8048446:	eb e5                	jmp    804842d <__libc_csu_fini+0x19>

08048448 <__do_global_ctors_aux>:
 8048448:	55                   	push   %ebp
 8048449:	89 e5                	mov    %esp,%ebp
 804844b:	53                   	push   %ebx
 804844c:	52                   	push   %edx
 804844d:	a1 d4 95 04 08       	mov    0x80495d4,%eax
 8048452:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048455:	bb d4 95 04 08       	mov    $0x80495d4,%ebx
 804845a:	74 0c                	je     8048468 <__do_global_ctors_aux+0x20>
 804845c:	83 eb 04             	sub    $0x4,%ebx
 804845f:	ff d0                	call   *%eax
 8048461:	8b 03                	mov    (%ebx),%eax
 8048463:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048466:	75 f4                	jne    804845c <__do_global_ctors_aux+0x14>
 8048468:	58                   	pop    %eax
 8048469:	5b                   	pop    %ebx
 804846a:	c9                   	leave  
 804846b:	c3                   	ret    

demo:     file format elf32-i386

Disassembly of section .rodata:

08048488 <_fp_hw>:
 8048488:	03 00 00 00                                         ....

0804848c <_IO_stdin_used>:
 804848c:	01 00 02 00 26 63 5f 69 6e 74 20 3d 20 30 78 25     ....&c_int = 0x%
 804849c:	78 20 0a 00 26 67 5f 69 6e 74 20 3d 20 30 78 25     x ..&g_int = 0x%
 80484ac:	78 20 0a 00 26 73 5f 69 6e 74 20 3d 20 30 78 25     x ..&s_int = 0x%
 80484bc:	78 20 0a 00 26 7a 5f 67 5f 69 6e 74 20 3d 20 30     x ..&z_g_int = 0
 80484cc:	78 25 78 20 0a 00 26 7a 5f 63 5f 69 6e 74 20 3d     x%x ..&z_c_int =
 80484dc:	20 30 78 25 78 20 0a 00 26 7a 5f 73 5f 69 6e 74      0x%x ..&z_s_int
 80484ec:	20 3d 20 30 78 25 78 20 0a 00                        = 0x%x ..

demo:     file format elf32-i386

Disassembly of section .data:

080494fc <__data_start>:
 80494fc:	00 00                	add    %al,(%eax)
	...

08049500 <__dso_handle>:
 8049500:	00 00 00 00                                         ....

08049504 <p.0>:
 8049504:	e0 95 04 08                                         ....

08049508 <s_int.0>:
 8049508:	2c 01 00 00                                         ,...
