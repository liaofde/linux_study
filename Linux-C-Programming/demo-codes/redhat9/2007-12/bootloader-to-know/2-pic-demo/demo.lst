
demo:     file format elf32-i386

Disassembly of section .text:

08048278 <_start>:
 8048278:	31 ed                	xor    %ebp,%ebp
 804827a:	5e                   	pop    %esi
 804827b:	89 e1                	mov    %esp,%ecx
 804827d:	83 e4 f0             	and    $0xfffffff0,%esp
 8048280:	50                   	push   %eax
 8048281:	54                   	push   %esp
 8048282:	52                   	push   %edx
 8048283:	68 0c 84 04 08       	push   $0x804840c
 8048288:	68 dc 83 04 08       	push   $0x80483dc
 804828d:	51                   	push   %ecx
 804828e:	56                   	push   %esi
 804828f:	68 28 83 04 08       	push   $0x8048328
 8048294:	e8 bf ff ff ff       	call   8048258 <_init+0x28>
 8048299:	f4                   	hlt    
 804829a:	90                   	nop    
 804829b:	90                   	nop    

0804829c <call_gmon_start>:
 804829c:	55                   	push   %ebp
 804829d:	89 e5                	mov    %esp,%ebp
 804829f:	53                   	push   %ebx
 80482a0:	50                   	push   %eax
 80482a1:	e8 00 00 00 00       	call   80482a6 <call_gmon_start+0xa>
 80482a6:	5b                   	pop    %ebx
 80482a7:	81 c3 42 13 00 00    	add    $0x1342,%ebx
 80482ad:	8b 83 14 00 00 00    	mov    0x14(%ebx),%eax
 80482b3:	85 c0                	test   %eax,%eax
 80482b5:	74 02                	je     80482b9 <call_gmon_start+0x1d>
 80482b7:	ff d0                	call   *%eax
 80482b9:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 80482bc:	c9                   	leave  
 80482bd:	c3                   	ret    
 80482be:	90                   	nop    
 80482bf:	90                   	nop    

080482c0 <__do_global_dtors_aux>:
 80482c0:	55                   	push   %ebp
 80482c1:	89 e5                	mov    %esp,%ebp
 80482c3:	83 ec 08             	sub    $0x8,%esp
 80482c6:	80 3d 00 96 04 08 00 	cmpb   $0x0,0x8049600
 80482cd:	75 29                	jne    80482f8 <__do_global_dtors_aux+0x38>
 80482cf:	a1 00 95 04 08       	mov    0x8049500,%eax
 80482d4:	8b 10                	mov    (%eax),%edx
 80482d6:	85 d2                	test   %edx,%edx
 80482d8:	74 17                	je     80482f1 <__do_global_dtors_aux+0x31>
 80482da:	89 f6                	mov    %esi,%esi
 80482dc:	83 c0 04             	add    $0x4,%eax
 80482df:	a3 00 95 04 08       	mov    %eax,0x8049500
 80482e4:	ff d2                	call   *%edx
 80482e6:	a1 00 95 04 08       	mov    0x8049500,%eax
 80482eb:	8b 10                	mov    (%eax),%edx
 80482ed:	85 d2                	test   %edx,%edx
 80482ef:	75 eb                	jne    80482dc <__do_global_dtors_aux+0x1c>
 80482f1:	c6 05 00 96 04 08 01 	movb   $0x1,0x8049600
 80482f8:	c9                   	leave  
 80482f9:	c3                   	ret    
 80482fa:	89 f6                	mov    %esi,%esi

080482fc <frame_dummy>:
 80482fc:	55                   	push   %ebp
 80482fd:	89 e5                	mov    %esp,%ebp
 80482ff:	83 ec 08             	sub    $0x8,%esp
 8048302:	a1 e4 95 04 08       	mov    0x80495e4,%eax
 8048307:	85 c0                	test   %eax,%eax
 8048309:	74 19                	je     8048324 <frame_dummy+0x28>
 804830b:	b8 00 00 00 00       	mov    $0x0,%eax
 8048310:	85 c0                	test   %eax,%eax
 8048312:	74 10                	je     8048324 <frame_dummy+0x28>
 8048314:	83 ec 0c             	sub    $0xc,%esp
 8048317:	68 e4 95 04 08       	push   $0x80495e4
 804831c:	e8 df 7c fb f7       	call   0 <_init-0x8048230>
 8048321:	83 c4 10             	add    $0x10,%esp
 8048324:	c9                   	leave  
 8048325:	c3                   	ret    
 8048326:	90                   	nop    
 8048327:	90                   	nop    

08048328 <main>:
 8048328:	55                   	push   %ebp
 8048329:	89 e5                	mov    %esp,%ebp
 804832b:	83 ec 08             	sub    $0x8,%esp
 804832e:	83 e4 f0             	and    $0xfffffff0,%esp
 8048331:	b8 00 00 00 00       	mov    $0x0,%eax
 8048336:	29 c4                	sub    %eax,%esp
 8048338:	83 ec 08             	sub    $0x8,%esp
 804833b:	68 88 84 04 08       	push   $0x8048488
 8048340:	68 8c 84 04 08       	push   $0x804848c
 8048345:	e8 1e ff ff ff       	call   8048268 <_init+0x38>
 804834a:	83 c4 10             	add    $0x10,%esp
 804834d:	83 ec 08             	sub    $0x8,%esp
 8048350:	68 04 95 04 08       	push   $0x8049504
 8048355:	68 9c 84 04 08       	push   $0x804849c
 804835a:	e8 09 ff ff ff       	call   8048268 <_init+0x38>
 804835f:	83 c4 10             	add    $0x10,%esp
 8048362:	83 ec 08             	sub    $0x8,%esp
 8048365:	68 08 95 04 08       	push   $0x8049508
 804836a:	68 ac 84 04 08       	push   $0x80484ac
 804836f:	e8 f4 fe ff ff       	call   8048268 <_init+0x38>
 8048374:	83 c4 10             	add    $0x10,%esp
 8048377:	83 ec 08             	sub    $0x8,%esp
 804837a:	68 0c 96 04 08       	push   $0x804960c
 804837f:	68 bc 84 04 08       	push   $0x80484bc
 8048384:	e8 df fe ff ff       	call   8048268 <_init+0x38>
 8048389:	83 c4 10             	add    $0x10,%esp
 804838c:	83 ec 08             	sub    $0x8,%esp
 804838f:	68 08 96 04 08       	push   $0x8049608
 8048394:	68 ce 84 04 08       	push   $0x80484ce
 8048399:	e8 ca fe ff ff       	call   8048268 <_init+0x38>
 804839e:	83 c4 10             	add    $0x10,%esp
 80483a1:	83 ec 08             	sub    $0x8,%esp
 80483a4:	68 04 96 04 08       	push   $0x8049604
 80483a9:	68 e0 84 04 08       	push   $0x80484e0
 80483ae:	e8 b5 fe ff ff       	call   8048268 <_init+0x38>
 80483b3:	83 c4 10             	add    $0x10,%esp
 80483b6:	b8 00 00 00 00       	mov    $0x0,%eax
 80483bb:	c9                   	leave  
 80483bc:	c3                   	ret    
 80483bd:	90                   	nop    
 80483be:	90                   	nop    
 80483bf:	90                   	nop    

080483c0 <add>:
 80483c0:	55                   	push   %ebp
 80483c1:	89 e5                	mov    %esp,%ebp
 80483c3:	8b 45 0c             	mov    0xc(%ebp),%eax
 80483c6:	03 45 08             	add    0x8(%ebp),%eax
 80483c9:	c9                   	leave  
 80483ca:	c3                   	ret    
 80483cb:	90                   	nop    

080483cc <sub>:
 80483cc:	55                   	push   %ebp
 80483cd:	89 e5                	mov    %esp,%ebp
 80483cf:	8b 55 0c             	mov    0xc(%ebp),%edx
 80483d2:	8b 45 08             	mov    0x8(%ebp),%eax
 80483d5:	29 d0                	sub    %edx,%eax
 80483d7:	c9                   	leave  
 80483d8:	c3                   	ret    
 80483d9:	90                   	nop    
 80483da:	90                   	nop    
 80483db:	90                   	nop    

080483dc <__libc_csu_init>:
 80483dc:	55                   	push   %ebp
 80483dd:	89 e5                	mov    %esp,%ebp
 80483df:	56                   	push   %esi
 80483e0:	53                   	push   %ebx
 80483e1:	e8 4a fe ff ff       	call   8048230 <_init>
 80483e6:	b8 f8 94 04 08       	mov    $0x80494f8,%eax
 80483eb:	2d f8 94 04 08       	sub    $0x80494f8,%eax
 80483f0:	c1 f8 02             	sar    $0x2,%eax
 80483f3:	31 db                	xor    %ebx,%ebx
 80483f5:	39 c3                	cmp    %eax,%ebx
 80483f7:	73 0f                	jae    8048408 <__libc_csu_init+0x2c>
 80483f9:	89 c6                	mov    %eax,%esi
 80483fb:	90                   	nop    
 80483fc:	ff 14 9d f8 94 04 08 	call   *0x80494f8(,%ebx,4)
 8048403:	43                   	inc    %ebx
 8048404:	39 f3                	cmp    %esi,%ebx
 8048406:	72 f4                	jb     80483fc <__libc_csu_init+0x20>
 8048408:	5b                   	pop    %ebx
 8048409:	5e                   	pop    %esi
 804840a:	c9                   	leave  
 804840b:	c3                   	ret    

0804840c <__libc_csu_fini>:
 804840c:	55                   	push   %ebp
 804840d:	89 e5                	mov    %esp,%ebp
 804840f:	53                   	push   %ebx
 8048410:	50                   	push   %eax
 8048411:	b8 f8 94 04 08       	mov    $0x80494f8,%eax
 8048416:	2d f8 94 04 08       	sub    $0x80494f8,%eax
 804841b:	c1 f8 02             	sar    $0x2,%eax
 804841e:	85 c0                	test   %eax,%eax
 8048420:	8d 58 ff             	lea    0xffffffff(%eax),%ebx
 8048423:	75 0b                	jne    8048430 <__libc_csu_fini+0x24>
 8048425:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 8048428:	c9                   	leave  
 8048429:	e9 36 00 00 00       	jmp    8048464 <_fini>
 804842e:	89 f6                	mov    %esi,%esi
 8048430:	ff 14 9d f8 94 04 08 	call   *0x80494f8(,%ebx,4)
 8048437:	89 da                	mov    %ebx,%edx
 8048439:	4b                   	dec    %ebx
 804843a:	85 d2                	test   %edx,%edx
 804843c:	75 f2                	jne    8048430 <__libc_csu_fini+0x24>
 804843e:	eb e5                	jmp    8048425 <__libc_csu_fini+0x19>

08048440 <__do_global_ctors_aux>:
 8048440:	55                   	push   %ebp
 8048441:	89 e5                	mov    %esp,%ebp
 8048443:	53                   	push   %ebx
 8048444:	52                   	push   %edx
 8048445:	a1 d4 95 04 08       	mov    0x80495d4,%eax
 804844a:	83 f8 ff             	cmp    $0xffffffff,%eax
 804844d:	bb d4 95 04 08       	mov    $0x80495d4,%ebx
 8048452:	74 0c                	je     8048460 <__do_global_ctors_aux+0x20>
 8048454:	83 eb 04             	sub    $0x4,%ebx
 8048457:	ff d0                	call   *%eax
 8048459:	8b 03                	mov    (%ebx),%eax
 804845b:	83 f8 ff             	cmp    $0xffffffff,%eax
 804845e:	75 f4                	jne    8048454 <__do_global_ctors_aux+0x14>
 8048460:	58                   	pop    %eax
 8048461:	5b                   	pop    %ebx
 8048462:	c9                   	leave  
 8048463:	c3                   	ret    

demo:     file format elf32-i386

Disassembly of section .rodata:

08048480 <_fp_hw>:
 8048480:	03 00 00 00                                         ....

08048484 <_IO_stdin_used>:
 8048484:	01 00 02 00                                         ....

08048488 <c_int>:
 8048488:	c8 00 00 00 26 63 5f 69 6e 74 20 3d 20 30 78 25     ....&c_int = 0x%
 8048498:	78 20 0a 00 26 67 5f 69 6e 74 20 3d 20 30 78 25     x ..&g_int = 0x%
 80484a8:	78 20 0a 00 26 73 5f 69 6e 74 20 3d 20 30 78 25     x ..&s_int = 0x%
 80484b8:	78 20 0a 00 26 7a 5f 67 5f 69 6e 74 20 3d 20 30     x ..&z_g_int = 0
 80484c8:	78 25 78 20 0a 00 26 7a 5f 63 5f 69 6e 74 20 3d     x%x ..&z_c_int =
 80484d8:	20 30 78 25 78 20 0a 00 26 7a 5f 73 5f 69 6e 74      0x%x ..&z_s_int
 80484e8:	20 3d 20 30 78 25 78 20 0a 00                        = 0x%x ..

demo:     file format elf32-i386

Disassembly of section .data:

080494f8 <__data_start>:
 80494f8:	00 00                	add    %al,(%eax)
	...

080494fc <__dso_handle>:
 80494fc:	00 00 00 00                                         ....

08049500 <p.0>:
 8049500:	e0 95 04 08                                         ....

08049504 <g_int>:
 8049504:	64 00 00 00                                         d...

08049508 <s_int>:
 8049508:	2c 01 00 00                                         ,...
